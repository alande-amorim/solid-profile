{"id":"node_modules/node-jose/lib/jwe/decrypt.js","dependencies":[{"name":"/Users/amorim.alande/Projects/pod-profile/package.json","includedInParent":true,"mtime":1612372540913},{"name":"/Users/amorim.alande/Projects/pod-profile/node_modules/node-jose/package.json","includedInParent":true,"mtime":1611187900958},{"name":"../util/base64url","loc":{"line":8,"column":24},"parent":"/Users/amorim.alande/Projects/pod-profile/node_modules/node-jose/lib/jwe/decrypt.js","resolved":"/Users/amorim.alande/Projects/pod-profile/node_modules/node-jose/lib/util/base64url.js"},{"name":"../util/algconfig","loc":{"line":9,"column":24},"parent":"/Users/amorim.alande/Projects/pod-profile/node_modules/node-jose/lib/jwe/decrypt.js","resolved":"/Users/amorim.alande/Projects/pod-profile/node_modules/node-jose/lib/util/algconfig.js"},{"name":"../jwk","loc":{"line":10,"column":18},"parent":"/Users/amorim.alande/Projects/pod-profile/node_modules/node-jose/lib/jwe/decrypt.js","resolved":"/Users/amorim.alande/Projects/pod-profile/node_modules/node-jose/lib/jwk/index.js"},{"name":"../util/merge","loc":{"line":11,"column":20},"parent":"/Users/amorim.alande/Projects/pod-profile/node_modules/node-jose/lib/jwe/decrypt.js","resolved":"/Users/amorim.alande/Projects/pod-profile/node_modules/node-jose/lib/util/merge.js"},{"name":"pako","loc":{"line":12,"column":19},"parent":"/Users/amorim.alande/Projects/pod-profile/node_modules/node-jose/lib/jwe/decrypt.js","resolved":"/Users/amorim.alande/Projects/pod-profile/node_modules/pako/index.js"},{"name":"buffer","parent":"/Users/amorim.alande/Projects/pod-profile/node_modules/node-jose/lib/jwe/decrypt.js","resolved":"/Users/amorim.alande/Projects/pod-profile/node_modules/node-libs-browser/node_modules/buffer/index.js"}],"generated":{"js":"var Buffer = require(\"buffer\").Buffer;\n/*!\n * jwe/decrypt.js - Decrypt from a JWE\n *\n * Copyright (c) 2015 Cisco Systems, Inc. See LICENSE file.\n */\n\"use strict\";\n\nvar base64url = require(\"../util/base64url\"),\n    AlgConfig = require(\"../util/algconfig\"),\n    JWK = require(\"../jwk\"),\n    merge = require(\"../util/merge\"),\n    pako = require(\"pako\");\n\nvar DEFAULT_OPTIONS = {\n  algorithms: \"*\"\n};\n\n/**\n * @class JWE.Decrypter\n * @classdesc Processor of encrypted data.\n *\n * @description\n * **NOTE:** This class cannot be instantiated directly. Instead\n * call {@link JWE.createDecrypt}.\n */\nfunction JWEDecrypter(ks, globalOpts) {\n  var assumedKey,\n    keystore;\n\n  if (JWK.isKey(ks)) {\n    assumedKey = ks;\n    keystore = assumedKey.keystore;\n  } else if (JWK.isKeyStore(ks)) {\n    keystore = ks;\n  } else {\n    throw new TypeError(\"Keystore must be provided\");\n  }\n\n  globalOpts = merge(DEFAULT_OPTIONS, globalOpts);\n\n  /**\n   * Decrypts the given input.\n   *\n   * {opts}, if provided, is used to customize this specific decrypt operation.\n   * This argument has the same semantics as {JWE.createDecrypt}, and takes\n   * precedence over those options.\n   *\n   * The returned PRomise, when fulfilled, returns an object with the\n   * following members:\n   *\n   * - `header` - The JOSE Header, combined from the relevant \"header\" and\n   *            \"protected\" fields from the original JWE object.\n   * - `protected` - An array containing the names of the protected fields\n   * - `key` - The used to decrypt the content\n   * - `payload` - The decrypted content (as a Buffer)\n   * - `plaintext` - An alias for `payload`\n   *\n   * @param {Object|String} input The encrypted content\n   * @param {Object} [opts] The options for this decryption operation.\n   * @returns {Promise} A promise for the decyprted plaintext\n   */\n  Object.defineProperty(this, \"decrypt\", {\n    value: function(input, opts) {\n      opts = merge({}, globalOpts, opts || {});\n      var extraHandlers = opts.handlers || {};\n      var handlerKeys = Object.keys(extraHandlers);\n      var algSpec = new AlgConfig(opts.algorithms);\n\n      /* eslint camelcase: [0] */\n      if (typeof input === \"string\") {\n        input = input.split(\".\");\n        input = {\n          protected: input[0],\n          recipients: [\n            {\n              encrypted_key: input[1]\n            }\n          ],\n          iv: input[2],\n          ciphertext: input[3],\n          tag: input[4]\n        };\n      } else if (!input || typeof input !== \"object\") {\n        throw new Error(\"invalid input\");\n      }\n      if (\"encrypted_key\" in input) {\n        input.recipients = [\n          {\n            encrypted_key: input.encrypted_key\n          }\n        ];\n      }\n\n      var promise;\n\n      // ensure recipients exists\n      var rcptList = input.recipients || [{}];\n      promise = Promise.resolve(rcptList);\n\n      //combine fields\n      var fields,\n          protect;\n      promise = promise.then(function(rcptList) {\n        if (input.protected) {\n          protect = base64url.decode(input.protected).toString(\"utf8\");\n          protect = JSON.parse(protect);\n\n          // verify \"crit\" field first\n          var crit = protect.crit;\n          if (crit) {\n            if (!Array.isArray(crit)) {\n              return Promise.reject(new Error(\"Invalid 'crit' header\"));\n            }\n            for (var idx = 0; crit.length > idx; idx++) {\n              if (-1 === handlerKeys.indexOf(crit[idx])) {\n                return Promise.reject(new Error(\n                    \"Critical extension is not supported: \" + crit[idx]\n                ));\n              }\n            }\n          }\n\n          fields = protect;\n          protect = Object.keys(protect);\n        } else {\n          fields = {};\n          protect = [];\n        }\n        fields = merge(input.unprotected || {}, fields);\n\n        rcptList = rcptList.map(function(r) {\n          var promise = Promise.resolve();\n          var header = r.header || {};\n          header = merge(header, fields);\n          r.header = header;\n          r.protected = protect;\n\n          // check on allowed algorithms\n          if (!algSpec.match(header.alg)) {\n            promise = promise.then(function() {\n              return Promise.reject(new Error(\"Algorithm not allowed: \" + header.alg));\n            });\n          }\n          if (!algSpec.match(header.enc)) {\n            promise = promise.then(function () {\n              return Promise.reject(new Error(\"Algorithm not allowed: \" + header.enc));\n            });\n          }\n\n          if (header.epk) {\n            promise = promise.then(function() {\n              return JWK.asKey(header.epk);\n            });\n            promise = promise.then(function(epk) {\n              header.epk = epk.toObject(false);\n            });\n          }\n          return promise.then(function() {\n            return r;\n          });\n        });\n\n        return Promise.all(rcptList);\n      });\n\n      // decrypt with first key found\n      var algKey,\n        encKey,\n        kdata;\n      promise = promise.then(function(rcptList) {\n        var jwe = {};\n        return new Promise(function(resolve, reject) {\n          var processKey = function() {\n            var rcpt = rcptList.shift();\n            if (!rcpt) {\n              reject(new Error(\"no key found\"));\n              return;\n            }\n\n            var algPromise = Promise.resolve(rcpt);\n            algPromise = algPromise.then(function(rcpt) {\n              // try to unwrap encrypted key\n              var prekey = kdata = rcpt.encrypted_key || \"\";\n              prekey = base64url.decode(prekey);\n              algKey = assumedKey || keystore.get({\n                use: \"enc\",\n                alg: rcpt.header.alg,\n                kid: rcpt.header.kid\n              });\n              if (algKey) {\n                return algKey.unwrap(rcpt.header.alg, prekey, rcpt.header);\n              } else {\n                return Promise.reject();\n              }\n            });\n            algPromise = algPromise.then(function(key) {\n              encKey = {\n                \"kty\": \"oct\",\n                \"k\": base64url.encode(key)\n              };\n              encKey = JWK.asKey(encKey);\n              jwe.key = algKey;\n              jwe.header = rcpt.header;\n              jwe.protected = rcpt.protected;\n              resolve(jwe);\n            });\n            algPromise.catch(processKey);\n          };\n          processKey();\n        });\n      });\n\n      // assign decipher inputs\n      promise = promise.then(function(jwe) {\n        jwe.iv = input.iv;\n        jwe.tag = input.tag;\n        jwe.ciphertext = input.ciphertext;\n\n        return jwe;\n      });\n\n      // process any prepare-decrypt handlers\n      promise = promise.then(function(jwe) {\n        var processing = [];\n        handlerKeys.forEach(function(h) {\n          h = extraHandlers[h];\n          var p;\n          if (\"function\" === typeof h) {\n            p = h(jwe);\n          } else if (\"object\" === typeof h && \"function\" === typeof h.prepare) {\n            p = h.prepare(jwe);\n          }\n          if (p) {\n            processing.push(Promise.resolve(p));\n          }\n        });\n        return Promise.all(processing).then(function() {\n          // don't actually care about individual handler results\n          // assume {jwe} is updated\n          return jwe;\n        });\n      });\n\n      // prepare decrypt inputs\n      promise = promise.then(function(jwe) {\n        if (!Buffer.isBuffer(jwe.ciphertext)) {\n          jwe.ciphertext = base64url.decode(jwe.ciphertext);\n        }\n\n        return jwe;\n      });\n\n      // decrypt it!\n      promise = promise.then(function(jwe) {\n        var adata = input.protected;\n        if (\"aad\" in input && null != input.aad) {\n          adata += \".\" + input.aad;\n        }\n\n        var params = {\n          iv: jwe.iv,\n          adata: adata,\n          tag: jwe.tag,\n          kdata: kdata,\n          epu: jwe.epu,\n          epv: jwe.epv\n        };\n        var cdata = jwe.ciphertext;\n\n        delete jwe.iv;\n        delete jwe.tag;\n        delete jwe.ciphertext;\n\n        return encKey.\n          then(function(enkKey) {\n            return enkKey.decrypt(jwe.header.enc, cdata, params).\n              then(function(pdata) {\n                jwe.payload = jwe.plaintext = pdata;\n                return jwe;\n              });\n          });\n      });\n\n      // (OPTIONAL) decompress plaintext\n      promise = promise.then(function(jwe) {\n        if (\"DEF\" === jwe.header.zip) {\n          return new Promise(function(resolve, reject) {\n            try {\n              var data = pako.inflateRaw(Buffer.from(jwe.plaintext))\n\n              jwe.payload = jwe.plaintext = Buffer.from(data);\n              resolve(jwe);\n            } catch (err) {\n              reject(err);\n            }\n          });\n        }\n\n        return jwe;\n      });\n\n      // process any post-decrypt handlers\n      promise = promise.then(function(jwe) {\n        var processing = [];\n        handlerKeys.forEach(function(h) {\n          h = extraHandlers[h];\n          var p;\n          if (\"object\" === typeof h && \"function\" === typeof h.complete) {\n            p = h.complete(jwe);\n          }\n          if (p) {\n            processing.push(Promise.resolve(p));\n          }\n        });\n        return Promise.all(processing).then(function() {\n          // don't actually care about individual handler results\n          // assume {jwe} is updated\n          return jwe;\n        });\n      });\n\n      return promise;\n    }\n  });\n}\n\n/**\n * @description\n * Creates a new Decrypter for the given Key or KeyStore.\n *\n * {opts}, when provided, is used to customize decryption processes. The\n * following options are currently supported:\n *\n * - `handlers` - An object where each name is a JOSE header member name and\n *   the value can be a boolean, function, or an object.\n *\n * Handlers are intended to support 'crit' extensions. When a boolean value,\n * the member is expected to be processed once decryption is fully complete.\n * When a function, it is called just before the ciphertext is decrypted\n * (processed as if it were a `prepare` handler, as decribed below). When an\n * object, it can contain any of the following members:\n *\n * - `recipient` - A function called after a valid key is determined; it takes\n *   an object describing the recipient, and returns a Promise that is\n *   fulfilled once the handler's processing is complete.\n * - `prepare` - A function called just prior to decrypting the ciphertext;\n *   it takes an object describing the decryption result (but containing\n *   `ciphertext` and `tag' instead of `payload` and `plaintext`), and\n *   returns a Promise that is fulfilled once the handler's processing is\n *   complete.\n * - `complete` - A function called once decryption is complete, just prior\n *   to fulfilling the Promise returned by `decrypt()`; it takes the object\n *   that will be returned by `decrypt()`'s fulfilled Promise, and returns\n *   a Promise that is fulfilled once the handler's processing is complete.\n *\n * Note that normal processing of `decrypt()` does not continue until all\n * relevant handlers have completed. Any changes handlers make to the\n * provided objects affects `decrypt()`'s processing.\n *\n * @param {JWK.Key|JWK.KeyStore} ks The Key or KeyStore to use for decryption.\n * @param {Object} [opts] The options for this Decrypter.\n * @returns {JWE.Decrypter} The new Decrypter.\n */\nfunction createDecrypt(ks, opts) {\n  var dec = new JWEDecrypter(ks, opts);\n  return dec;\n}\n\nmodule.exports = {\n  decrypter: JWEDecrypter,\n  createDecrypt: createDecrypt\n};\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":1,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":2,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":3,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":4,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":5,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":6,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":7,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":8,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":9,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":10,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":11,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":12,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":13,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":14,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":15,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":16,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":17,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":18,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":19,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":20,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":21,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":22,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":23,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":24,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":25,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":26,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":27,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":28,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":29,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":30,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":31,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":32,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":33,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":34,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":35,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":36,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":37,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":38,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":39,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":40,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":41,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":42,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":43,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":44,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":45,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":46,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":47,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":48,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":49,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":50,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":51,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":52,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":53,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":54,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":55,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":56,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":57,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":58,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":59,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":60,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":61,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":62,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":63,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":64,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":65,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":66,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":67,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":68,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":69,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":70,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":71,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":72,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":73,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":74,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":75,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":76,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":77,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":78,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":79,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":80,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":81,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":82,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":83,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":84,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":85,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":86,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":87,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":88,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":89,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":90,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":91,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":92,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":93,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":94,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":95,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":96,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":97,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":98,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":99,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":100,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":101,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":102,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":103,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":104,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":105,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":106,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":107,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":108,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":109,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":110,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":111,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":112,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":113,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":114,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":115,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":116,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":117,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":118,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":119,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":120,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":121,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":122,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":123,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":124,"column":0},"generated":{"line":125,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":125,"column":0},"generated":{"line":126,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":126,"column":0},"generated":{"line":127,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":127,"column":0},"generated":{"line":128,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":128,"column":0},"generated":{"line":129,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":129,"column":0},"generated":{"line":130,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":130,"column":0},"generated":{"line":131,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":131,"column":0},"generated":{"line":132,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":132,"column":0},"generated":{"line":133,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":133,"column":0},"generated":{"line":134,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":134,"column":0},"generated":{"line":135,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":135,"column":0},"generated":{"line":136,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":136,"column":0},"generated":{"line":137,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":137,"column":0},"generated":{"line":138,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":138,"column":0},"generated":{"line":139,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":139,"column":0},"generated":{"line":140,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":140,"column":0},"generated":{"line":141,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":141,"column":0},"generated":{"line":142,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":142,"column":0},"generated":{"line":143,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":143,"column":0},"generated":{"line":144,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":144,"column":0},"generated":{"line":145,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":145,"column":0},"generated":{"line":146,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":146,"column":0},"generated":{"line":147,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":147,"column":0},"generated":{"line":148,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":148,"column":0},"generated":{"line":149,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":149,"column":0},"generated":{"line":150,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":150,"column":0},"generated":{"line":151,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":151,"column":0},"generated":{"line":152,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":152,"column":0},"generated":{"line":153,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":153,"column":0},"generated":{"line":154,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":154,"column":0},"generated":{"line":155,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":155,"column":0},"generated":{"line":156,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":156,"column":0},"generated":{"line":157,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":157,"column":0},"generated":{"line":158,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":158,"column":0},"generated":{"line":159,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":159,"column":0},"generated":{"line":160,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":160,"column":0},"generated":{"line":161,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":161,"column":0},"generated":{"line":162,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":162,"column":0},"generated":{"line":163,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":163,"column":0},"generated":{"line":164,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":164,"column":0},"generated":{"line":165,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":165,"column":0},"generated":{"line":166,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":166,"column":0},"generated":{"line":167,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":167,"column":0},"generated":{"line":168,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":168,"column":0},"generated":{"line":169,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":169,"column":0},"generated":{"line":170,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":170,"column":0},"generated":{"line":171,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":171,"column":0},"generated":{"line":172,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":172,"column":0},"generated":{"line":173,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":173,"column":0},"generated":{"line":174,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":174,"column":0},"generated":{"line":175,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":175,"column":0},"generated":{"line":176,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":176,"column":0},"generated":{"line":177,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":177,"column":0},"generated":{"line":178,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":178,"column":0},"generated":{"line":179,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":179,"column":0},"generated":{"line":180,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":180,"column":0},"generated":{"line":181,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":181,"column":0},"generated":{"line":182,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":182,"column":0},"generated":{"line":183,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":183,"column":0},"generated":{"line":184,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":184,"column":0},"generated":{"line":185,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":185,"column":0},"generated":{"line":186,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":186,"column":0},"generated":{"line":187,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":187,"column":0},"generated":{"line":188,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":188,"column":0},"generated":{"line":189,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":189,"column":0},"generated":{"line":190,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":190,"column":0},"generated":{"line":191,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":191,"column":0},"generated":{"line":192,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":192,"column":0},"generated":{"line":193,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":193,"column":0},"generated":{"line":194,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":194,"column":0},"generated":{"line":195,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":195,"column":0},"generated":{"line":196,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":196,"column":0},"generated":{"line":197,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":197,"column":0},"generated":{"line":198,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":198,"column":0},"generated":{"line":199,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":199,"column":0},"generated":{"line":200,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":200,"column":0},"generated":{"line":201,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":201,"column":0},"generated":{"line":202,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":202,"column":0},"generated":{"line":203,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":203,"column":0},"generated":{"line":204,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":204,"column":0},"generated":{"line":205,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":205,"column":0},"generated":{"line":206,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":206,"column":0},"generated":{"line":207,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":207,"column":0},"generated":{"line":208,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":208,"column":0},"generated":{"line":209,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":209,"column":0},"generated":{"line":210,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":210,"column":0},"generated":{"line":211,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":211,"column":0},"generated":{"line":212,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":212,"column":0},"generated":{"line":213,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":213,"column":0},"generated":{"line":214,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":214,"column":0},"generated":{"line":215,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":215,"column":0},"generated":{"line":216,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":216,"column":0},"generated":{"line":217,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":217,"column":0},"generated":{"line":218,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":218,"column":0},"generated":{"line":219,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":219,"column":0},"generated":{"line":220,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":220,"column":0},"generated":{"line":221,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":221,"column":0},"generated":{"line":222,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":222,"column":0},"generated":{"line":223,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":223,"column":0},"generated":{"line":224,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":224,"column":0},"generated":{"line":225,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":225,"column":0},"generated":{"line":226,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":226,"column":0},"generated":{"line":227,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":227,"column":0},"generated":{"line":228,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":228,"column":0},"generated":{"line":229,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":229,"column":0},"generated":{"line":230,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":230,"column":0},"generated":{"line":231,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":231,"column":0},"generated":{"line":232,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":232,"column":0},"generated":{"line":233,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":233,"column":0},"generated":{"line":234,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":234,"column":0},"generated":{"line":235,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":235,"column":0},"generated":{"line":236,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":236,"column":0},"generated":{"line":237,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":237,"column":0},"generated":{"line":238,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":238,"column":0},"generated":{"line":239,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":239,"column":0},"generated":{"line":240,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":240,"column":0},"generated":{"line":241,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":241,"column":0},"generated":{"line":242,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":242,"column":0},"generated":{"line":243,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":243,"column":0},"generated":{"line":244,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":244,"column":0},"generated":{"line":245,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":245,"column":0},"generated":{"line":246,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":246,"column":0},"generated":{"line":247,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":247,"column":0},"generated":{"line":248,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":248,"column":0},"generated":{"line":249,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":249,"column":0},"generated":{"line":250,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":250,"column":0},"generated":{"line":251,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":251,"column":0},"generated":{"line":252,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":252,"column":0},"generated":{"line":253,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":253,"column":0},"generated":{"line":254,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":254,"column":0},"generated":{"line":255,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":255,"column":0},"generated":{"line":256,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":256,"column":0},"generated":{"line":257,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":257,"column":0},"generated":{"line":258,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":258,"column":0},"generated":{"line":259,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":259,"column":0},"generated":{"line":260,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":260,"column":0},"generated":{"line":261,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":261,"column":0},"generated":{"line":262,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":262,"column":0},"generated":{"line":263,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":263,"column":0},"generated":{"line":264,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":264,"column":0},"generated":{"line":265,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":265,"column":0},"generated":{"line":266,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":266,"column":0},"generated":{"line":267,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":267,"column":0},"generated":{"line":268,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":268,"column":0},"generated":{"line":269,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":269,"column":0},"generated":{"line":270,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":270,"column":0},"generated":{"line":271,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":271,"column":0},"generated":{"line":272,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":272,"column":0},"generated":{"line":273,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":273,"column":0},"generated":{"line":274,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":274,"column":0},"generated":{"line":275,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":275,"column":0},"generated":{"line":276,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":276,"column":0},"generated":{"line":277,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":277,"column":0},"generated":{"line":278,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":278,"column":0},"generated":{"line":279,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":279,"column":0},"generated":{"line":280,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":280,"column":0},"generated":{"line":281,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":281,"column":0},"generated":{"line":282,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":282,"column":0},"generated":{"line":283,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":283,"column":0},"generated":{"line":284,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":284,"column":0},"generated":{"line":285,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":285,"column":0},"generated":{"line":286,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":286,"column":0},"generated":{"line":287,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":287,"column":0},"generated":{"line":288,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":288,"column":0},"generated":{"line":289,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":289,"column":0},"generated":{"line":290,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":290,"column":0},"generated":{"line":291,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":291,"column":0},"generated":{"line":292,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":292,"column":0},"generated":{"line":293,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":293,"column":0},"generated":{"line":294,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":294,"column":0},"generated":{"line":295,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":295,"column":0},"generated":{"line":296,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":296,"column":0},"generated":{"line":297,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":297,"column":0},"generated":{"line":298,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":298,"column":0},"generated":{"line":299,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":299,"column":0},"generated":{"line":300,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":300,"column":0},"generated":{"line":301,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":301,"column":0},"generated":{"line":302,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":302,"column":0},"generated":{"line":303,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":303,"column":0},"generated":{"line":304,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":304,"column":0},"generated":{"line":305,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":305,"column":0},"generated":{"line":306,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":306,"column":0},"generated":{"line":307,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":307,"column":0},"generated":{"line":308,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":308,"column":0},"generated":{"line":309,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":309,"column":0},"generated":{"line":310,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":310,"column":0},"generated":{"line":311,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":311,"column":0},"generated":{"line":312,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":312,"column":0},"generated":{"line":313,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":313,"column":0},"generated":{"line":314,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":314,"column":0},"generated":{"line":315,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":315,"column":0},"generated":{"line":316,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":316,"column":0},"generated":{"line":317,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":317,"column":0},"generated":{"line":318,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":318,"column":0},"generated":{"line":319,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":319,"column":0},"generated":{"line":320,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":320,"column":0},"generated":{"line":321,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":321,"column":0},"generated":{"line":322,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":322,"column":0},"generated":{"line":323,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":323,"column":0},"generated":{"line":324,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":324,"column":0},"generated":{"line":325,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":325,"column":0},"generated":{"line":326,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":326,"column":0},"generated":{"line":327,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":327,"column":0},"generated":{"line":328,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":328,"column":0},"generated":{"line":329,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":329,"column":0},"generated":{"line":330,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":330,"column":0},"generated":{"line":331,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":331,"column":0},"generated":{"line":332,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":332,"column":0},"generated":{"line":333,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":333,"column":0},"generated":{"line":334,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":334,"column":0},"generated":{"line":335,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":335,"column":0},"generated":{"line":336,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":336,"column":0},"generated":{"line":337,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":337,"column":0},"generated":{"line":338,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":338,"column":0},"generated":{"line":339,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":339,"column":0},"generated":{"line":340,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":340,"column":0},"generated":{"line":341,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":341,"column":0},"generated":{"line":342,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":342,"column":0},"generated":{"line":343,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":343,"column":0},"generated":{"line":344,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":344,"column":0},"generated":{"line":345,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":345,"column":0},"generated":{"line":346,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":346,"column":0},"generated":{"line":347,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":347,"column":0},"generated":{"line":348,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":348,"column":0},"generated":{"line":349,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":349,"column":0},"generated":{"line":350,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":350,"column":0},"generated":{"line":351,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":351,"column":0},"generated":{"line":352,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":352,"column":0},"generated":{"line":353,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":353,"column":0},"generated":{"line":354,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":354,"column":0},"generated":{"line":355,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":355,"column":0},"generated":{"line":356,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":356,"column":0},"generated":{"line":357,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":357,"column":0},"generated":{"line":358,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":358,"column":0},"generated":{"line":359,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":359,"column":0},"generated":{"line":360,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":360,"column":0},"generated":{"line":361,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":361,"column":0},"generated":{"line":362,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":362,"column":0},"generated":{"line":363,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":363,"column":0},"generated":{"line":364,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":364,"column":0},"generated":{"line":365,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":365,"column":0},"generated":{"line":366,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":366,"column":0},"generated":{"line":367,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":367,"column":0},"generated":{"line":368,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":368,"column":0},"generated":{"line":369,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":369,"column":0},"generated":{"line":370,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":370,"column":0},"generated":{"line":371,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":371,"column":0},"generated":{"line":372,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":372,"column":0},"generated":{"line":373,"column":0}},{"source":"node_modules/node-jose/lib/jwe/decrypt.js","original":{"line":373,"column":0},"generated":{"line":374,"column":0}}],"sources":{"node_modules/node-jose/lib/jwe/decrypt.js":"/*!\n * jwe/decrypt.js - Decrypt from a JWE\n *\n * Copyright (c) 2015 Cisco Systems, Inc. See LICENSE file.\n */\n\"use strict\";\n\nvar base64url = require(\"../util/base64url\"),\n    AlgConfig = require(\"../util/algconfig\"),\n    JWK = require(\"../jwk\"),\n    merge = require(\"../util/merge\"),\n    pako = require(\"pako\");\n\nvar DEFAULT_OPTIONS = {\n  algorithms: \"*\"\n};\n\n/**\n * @class JWE.Decrypter\n * @classdesc Processor of encrypted data.\n *\n * @description\n * **NOTE:** This class cannot be instantiated directly. Instead\n * call {@link JWE.createDecrypt}.\n */\nfunction JWEDecrypter(ks, globalOpts) {\n  var assumedKey,\n    keystore;\n\n  if (JWK.isKey(ks)) {\n    assumedKey = ks;\n    keystore = assumedKey.keystore;\n  } else if (JWK.isKeyStore(ks)) {\n    keystore = ks;\n  } else {\n    throw new TypeError(\"Keystore must be provided\");\n  }\n\n  globalOpts = merge(DEFAULT_OPTIONS, globalOpts);\n\n  /**\n   * Decrypts the given input.\n   *\n   * {opts}, if provided, is used to customize this specific decrypt operation.\n   * This argument has the same semantics as {JWE.createDecrypt}, and takes\n   * precedence over those options.\n   *\n   * The returned PRomise, when fulfilled, returns an object with the\n   * following members:\n   *\n   * - `header` - The JOSE Header, combined from the relevant \"header\" and\n   *            \"protected\" fields from the original JWE object.\n   * - `protected` - An array containing the names of the protected fields\n   * - `key` - The used to decrypt the content\n   * - `payload` - The decrypted content (as a Buffer)\n   * - `plaintext` - An alias for `payload`\n   *\n   * @param {Object|String} input The encrypted content\n   * @param {Object} [opts] The options for this decryption operation.\n   * @returns {Promise} A promise for the decyprted plaintext\n   */\n  Object.defineProperty(this, \"decrypt\", {\n    value: function(input, opts) {\n      opts = merge({}, globalOpts, opts || {});\n      var extraHandlers = opts.handlers || {};\n      var handlerKeys = Object.keys(extraHandlers);\n      var algSpec = new AlgConfig(opts.algorithms);\n\n      /* eslint camelcase: [0] */\n      if (typeof input === \"string\") {\n        input = input.split(\".\");\n        input = {\n          protected: input[0],\n          recipients: [\n            {\n              encrypted_key: input[1]\n            }\n          ],\n          iv: input[2],\n          ciphertext: input[3],\n          tag: input[4]\n        };\n      } else if (!input || typeof input !== \"object\") {\n        throw new Error(\"invalid input\");\n      }\n      if (\"encrypted_key\" in input) {\n        input.recipients = [\n          {\n            encrypted_key: input.encrypted_key\n          }\n        ];\n      }\n\n      var promise;\n\n      // ensure recipients exists\n      var rcptList = input.recipients || [{}];\n      promise = Promise.resolve(rcptList);\n\n      //combine fields\n      var fields,\n          protect;\n      promise = promise.then(function(rcptList) {\n        if (input.protected) {\n          protect = base64url.decode(input.protected).toString(\"utf8\");\n          protect = JSON.parse(protect);\n\n          // verify \"crit\" field first\n          var crit = protect.crit;\n          if (crit) {\n            if (!Array.isArray(crit)) {\n              return Promise.reject(new Error(\"Invalid 'crit' header\"));\n            }\n            for (var idx = 0; crit.length > idx; idx++) {\n              if (-1 === handlerKeys.indexOf(crit[idx])) {\n                return Promise.reject(new Error(\n                    \"Critical extension is not supported: \" + crit[idx]\n                ));\n              }\n            }\n          }\n\n          fields = protect;\n          protect = Object.keys(protect);\n        } else {\n          fields = {};\n          protect = [];\n        }\n        fields = merge(input.unprotected || {}, fields);\n\n        rcptList = rcptList.map(function(r) {\n          var promise = Promise.resolve();\n          var header = r.header || {};\n          header = merge(header, fields);\n          r.header = header;\n          r.protected = protect;\n\n          // check on allowed algorithms\n          if (!algSpec.match(header.alg)) {\n            promise = promise.then(function() {\n              return Promise.reject(new Error(\"Algorithm not allowed: \" + header.alg));\n            });\n          }\n          if (!algSpec.match(header.enc)) {\n            promise = promise.then(function () {\n              return Promise.reject(new Error(\"Algorithm not allowed: \" + header.enc));\n            });\n          }\n\n          if (header.epk) {\n            promise = promise.then(function() {\n              return JWK.asKey(header.epk);\n            });\n            promise = promise.then(function(epk) {\n              header.epk = epk.toObject(false);\n            });\n          }\n          return promise.then(function() {\n            return r;\n          });\n        });\n\n        return Promise.all(rcptList);\n      });\n\n      // decrypt with first key found\n      var algKey,\n        encKey,\n        kdata;\n      promise = promise.then(function(rcptList) {\n        var jwe = {};\n        return new Promise(function(resolve, reject) {\n          var processKey = function() {\n            var rcpt = rcptList.shift();\n            if (!rcpt) {\n              reject(new Error(\"no key found\"));\n              return;\n            }\n\n            var algPromise = Promise.resolve(rcpt);\n            algPromise = algPromise.then(function(rcpt) {\n              // try to unwrap encrypted key\n              var prekey = kdata = rcpt.encrypted_key || \"\";\n              prekey = base64url.decode(prekey);\n              algKey = assumedKey || keystore.get({\n                use: \"enc\",\n                alg: rcpt.header.alg,\n                kid: rcpt.header.kid\n              });\n              if (algKey) {\n                return algKey.unwrap(rcpt.header.alg, prekey, rcpt.header);\n              } else {\n                return Promise.reject();\n              }\n            });\n            algPromise = algPromise.then(function(key) {\n              encKey = {\n                \"kty\": \"oct\",\n                \"k\": base64url.encode(key)\n              };\n              encKey = JWK.asKey(encKey);\n              jwe.key = algKey;\n              jwe.header = rcpt.header;\n              jwe.protected = rcpt.protected;\n              resolve(jwe);\n            });\n            algPromise.catch(processKey);\n          };\n          processKey();\n        });\n      });\n\n      // assign decipher inputs\n      promise = promise.then(function(jwe) {\n        jwe.iv = input.iv;\n        jwe.tag = input.tag;\n        jwe.ciphertext = input.ciphertext;\n\n        return jwe;\n      });\n\n      // process any prepare-decrypt handlers\n      promise = promise.then(function(jwe) {\n        var processing = [];\n        handlerKeys.forEach(function(h) {\n          h = extraHandlers[h];\n          var p;\n          if (\"function\" === typeof h) {\n            p = h(jwe);\n          } else if (\"object\" === typeof h && \"function\" === typeof h.prepare) {\n            p = h.prepare(jwe);\n          }\n          if (p) {\n            processing.push(Promise.resolve(p));\n          }\n        });\n        return Promise.all(processing).then(function() {\n          // don't actually care about individual handler results\n          // assume {jwe} is updated\n          return jwe;\n        });\n      });\n\n      // prepare decrypt inputs\n      promise = promise.then(function(jwe) {\n        if (!Buffer.isBuffer(jwe.ciphertext)) {\n          jwe.ciphertext = base64url.decode(jwe.ciphertext);\n        }\n\n        return jwe;\n      });\n\n      // decrypt it!\n      promise = promise.then(function(jwe) {\n        var adata = input.protected;\n        if (\"aad\" in input && null != input.aad) {\n          adata += \".\" + input.aad;\n        }\n\n        var params = {\n          iv: jwe.iv,\n          adata: adata,\n          tag: jwe.tag,\n          kdata: kdata,\n          epu: jwe.epu,\n          epv: jwe.epv\n        };\n        var cdata = jwe.ciphertext;\n\n        delete jwe.iv;\n        delete jwe.tag;\n        delete jwe.ciphertext;\n\n        return encKey.\n          then(function(enkKey) {\n            return enkKey.decrypt(jwe.header.enc, cdata, params).\n              then(function(pdata) {\n                jwe.payload = jwe.plaintext = pdata;\n                return jwe;\n              });\n          });\n      });\n\n      // (OPTIONAL) decompress plaintext\n      promise = promise.then(function(jwe) {\n        if (\"DEF\" === jwe.header.zip) {\n          return new Promise(function(resolve, reject) {\n            try {\n              var data = pako.inflateRaw(Buffer.from(jwe.plaintext))\n\n              jwe.payload = jwe.plaintext = Buffer.from(data);\n              resolve(jwe);\n            } catch (err) {\n              reject(err);\n            }\n          });\n        }\n\n        return jwe;\n      });\n\n      // process any post-decrypt handlers\n      promise = promise.then(function(jwe) {\n        var processing = [];\n        handlerKeys.forEach(function(h) {\n          h = extraHandlers[h];\n          var p;\n          if (\"object\" === typeof h && \"function\" === typeof h.complete) {\n            p = h.complete(jwe);\n          }\n          if (p) {\n            processing.push(Promise.resolve(p));\n          }\n        });\n        return Promise.all(processing).then(function() {\n          // don't actually care about individual handler results\n          // assume {jwe} is updated\n          return jwe;\n        });\n      });\n\n      return promise;\n    }\n  });\n}\n\n/**\n * @description\n * Creates a new Decrypter for the given Key or KeyStore.\n *\n * {opts}, when provided, is used to customize decryption processes. The\n * following options are currently supported:\n *\n * - `handlers` - An object where each name is a JOSE header member name and\n *   the value can be a boolean, function, or an object.\n *\n * Handlers are intended to support 'crit' extensions. When a boolean value,\n * the member is expected to be processed once decryption is fully complete.\n * When a function, it is called just before the ciphertext is decrypted\n * (processed as if it were a `prepare` handler, as decribed below). When an\n * object, it can contain any of the following members:\n *\n * - `recipient` - A function called after a valid key is determined; it takes\n *   an object describing the recipient, and returns a Promise that is\n *   fulfilled once the handler's processing is complete.\n * - `prepare` - A function called just prior to decrypting the ciphertext;\n *   it takes an object describing the decryption result (but containing\n *   `ciphertext` and `tag' instead of `payload` and `plaintext`), and\n *   returns a Promise that is fulfilled once the handler's processing is\n *   complete.\n * - `complete` - A function called once decryption is complete, just prior\n *   to fulfilling the Promise returned by `decrypt()`; it takes the object\n *   that will be returned by `decrypt()`'s fulfilled Promise, and returns\n *   a Promise that is fulfilled once the handler's processing is complete.\n *\n * Note that normal processing of `decrypt()` does not continue until all\n * relevant handlers have completed. Any changes handlers make to the\n * provided objects affects `decrypt()`'s processing.\n *\n * @param {JWK.Key|JWK.KeyStore} ks The Key or KeyStore to use for decryption.\n * @param {Object} [opts] The options for this Decrypter.\n * @returns {JWE.Decrypter} The new Decrypter.\n */\nfunction createDecrypt(ks, opts) {\n  var dec = new JWEDecrypter(ks, opts);\n  return dec;\n}\n\nmodule.exports = {\n  decrypter: JWEDecrypter,\n  createDecrypt: createDecrypt\n};\n"},"lineCount":374}},"error":null,"hash":"92b712e59dc99bc69fb54b9f4e1b7e88","cacheData":{"env":{}}}