{"id":"node_modules/node-jose/lib/jws/verify.js","dependencies":[{"name":"/Users/amorim.alande/Projects/pod-profile/package.json","includedInParent":true,"mtime":1612221001734},{"name":"/Users/amorim.alande/Projects/pod-profile/node_modules/node-jose/package.json","includedInParent":true,"mtime":1611187900958},{"name":"lodash/clone","loc":{"line":8,"column":20},"parent":"/Users/amorim.alande/Projects/pod-profile/node_modules/node-jose/lib/jws/verify.js","resolved":"/Users/amorim.alande/Projects/pod-profile/node_modules/lodash/clone.js"},{"name":"../util/merge","loc":{"line":9,"column":20},"parent":"/Users/amorim.alande/Projects/pod-profile/node_modules/node-jose/lib/jws/verify.js","resolved":"/Users/amorim.alande/Projects/pod-profile/node_modules/node-jose/lib/util/merge.js"},{"name":"../util/base64url","loc":{"line":10,"column":24},"parent":"/Users/amorim.alande/Projects/pod-profile/node_modules/node-jose/lib/jws/verify.js","resolved":"/Users/amorim.alande/Projects/pod-profile/node_modules/node-jose/lib/util/base64url.js"},{"name":"../util/algconfig","loc":{"line":11,"column":24},"parent":"/Users/amorim.alande/Projects/pod-profile/node_modules/node-jose/lib/jws/verify.js","resolved":"/Users/amorim.alande/Projects/pod-profile/node_modules/node-jose/lib/util/algconfig.js"},{"name":"../jwk","loc":{"line":12,"column":18},"parent":"/Users/amorim.alande/Projects/pod-profile/node_modules/node-jose/lib/jws/verify.js","resolved":"/Users/amorim.alande/Projects/pod-profile/node_modules/node-jose/lib/jwk/index.js"},{"name":"buffer","parent":"/Users/amorim.alande/Projects/pod-profile/node_modules/node-jose/lib/jws/verify.js","resolved":"/Users/amorim.alande/Projects/pod-profile/node_modules/node-libs-browser/node_modules/buffer/index.js"}],"generated":{"js":"var Buffer = require(\"buffer\").Buffer;\n/*!\n * jws/verify.js - Verifies from a JWS\n *\n * Copyright (c) 2015 Cisco Systems, Inc. See LICENSE file.\n */\n\"use strict\";\n\nvar clone = require(\"lodash/clone\"),\n    merge = require(\"../util/merge\"),\n    base64url = require(\"../util/base64url\"),\n    AlgConfig = require(\"../util/algconfig\"),\n    JWK = require(\"../jwk\");\n\nvar DEFAULT_OPTIONS = {\n  algorithms: \"*\",\n  allowEmbeddedKey: false\n};\n\n/**\n * @class JWS.Verifier\n * @classdesc Parser of signed content.\n *\n * @description\n * **NOTE:** this class cannot be instantiated directly. Instead call {@link\n * JWS.createVerify}.\n */\nvar JWSVerifier = function(ks, globalOpts) {\n  var assumedKey,\n      keystore;\n\n  if (JWK.isKey(ks)) {\n    assumedKey = ks;\n    keystore = assumedKey.keystore;\n  } else if (JWK.isKeyStore(ks)) {\n    keystore = ks;\n  } else {\n    keystore = JWK.createKeyStore();\n  }\n\n  globalOpts = merge(DEFAULT_OPTIONS, globalOpts);\n\n  Object.defineProperty(this, \"defaultKey\", {\n    value: assumedKey || undefined,\n    enumerable: true\n  });\n  Object.defineProperty(this, \"keystore\", {\n    value: keystore,\n    enumerable: true\n  });\n\n  Object.defineProperty(this, \"verify\", {\n    value: function(input, opts) {\n      opts = merge({}, globalOpts, opts || {});\n      var extraHandlers = opts.handlers || {};\n      var handlerKeys = Object.keys(extraHandlers);\n      var algSpec = new AlgConfig(opts.algorithms);\n\n      if (\"string\" === typeof input) {\n        input = input.split(\".\");\n        input = {\n          payload: input[1],\n          signatures: [\n            {\n              protected: input[0],\n              signature: input[2]\n            }\n          ]\n        };\n      } else if (!input || \"object\" !== typeof input) {\n        throw new Error(\"invalid input\");\n      }\n\n      // fixup \"flattened JSON\" to look like \"general JSON\"\n      if (input.signature) {\n        input.signatures = [\n          {\n            protected: input.protected || undefined,\n            header: input.header || undefined,\n            signature: input.signature\n          }\n        ];\n      }\n\n      // ensure signatories exists\n      var sigList = input.signatures || [{}];\n\n      // combine fields and decode signature per signatory\n      sigList = sigList.map(function(s) {\n        var header = clone(s.header || {});\n        var protect = s.protected ?\n                      JSON.parse(base64url.decode(s.protected, \"utf8\")) :\n                      {};\n        header = merge(header, protect);\n        var signature = base64url.decode(s.signature);\n\n        // process allowed algorithims\n        if (!algSpec.match(header.alg)) {\n          return Promise.reject(new Error(\"Algorithm not allowed: \" + header.alg));\n        }\n\n        // process \"crit\" first\n        var crit = protect.crit;\n        if (crit) {\n          if (!Array.isArray(crit)) {\n            return Promise.reject(new Error(\"Invalid 'crit' header\"));\n          }\n          for (var idx = 0; crit.length > idx; idx++) {\n            if (-1 === handlerKeys.indexOf(crit[idx])) {\n              return Promise.reject(new Error(\n                  \"Critical extension is not supported: \" + crit[idx]\n              ));\n            }\n          }\n        }\n        protect = Object.keys(protect);\n\n        return Promise.resolve({\n          protected: protect,\n          aad: s.protected || \"\",\n          header: header,\n          signature: signature\n        });\n      });\n\n      var promise = Promise.all(sigList);\n      promise = promise.then(function(sigList) {\n        return new Promise(function(resolve, reject) {\n          var processSig = function() {\n            var sig = sigList.shift();\n            if (!sig) {\n              reject(new Error(\"no key found\"));\n              return;\n            }\n\n            sig = merge({}, sig, {\n              payload: input.payload\n            });\n            var p = Promise.resolve(sig);\n            // find the key\n            p = p.then(function(sig) {\n              var algKey;\n              // TODO: resolve jku, x5c, x5u\n              if (opts.allowEmbeddedKey && sig.header.jwk) {\n                algKey = JWK.asKey(sig.header.jwk);\n              } else if (opts.allowEmbeddedKey && sig.header.x5c) {\n                algKey = sig.header.x5c[0];\n                algKey = Buffer.from(algKey, \"base64\");\n                // TODO: callback to validate chain\n                algKey = JWK.asKey(algKey, \"pkix\");\n              } else {\n                algKey = Promise.resolve(assumedKey || keystore.get({\n                  use: \"sig\",\n                  alg: sig.header.alg,\n                  kid: sig.header.kid\n                }));\n              }\n              return algKey.then(function(k) {\n                if (!k) {\n                  return Promise.reject(new Error(\"key does not match\"));\n                }\n                sig.key = k;\n                return sig;\n              });\n            });\n\n            // process any prepare-verify handlers\n            p = p.then(function(sig) {\n              var processing = [];\n              handlerKeys.forEach(function(h) {\n                h = extraHandlers[h];\n                var p;\n                if (\"function\" === typeof h) {\n                  p = h(sig);\n                } else if (\"object\" === typeof h && \"function\" === typeof h.prepare) {\n                  p = h.prepare(sig);\n                }\n                if (p) {\n                  processing.push(Promise.resolve(p));\n                }\n              });\n              return Promise.all(processing).then(function() {\n                // don't actually care about individual handler results\n                // assume {sig} is updated\n                return sig;\n              });\n            });\n\n            // prepare verify inputs\n            p = p.then(function(sig) {\n              var aad = sig.aad || \"\",\n                  payload = sig.payload || \"\";\n              var content = Buffer.alloc(1 + aad.length + payload.length),\n                  pos = 0;\n              content.write(aad, pos, \"ascii\");\n              pos += aad.length;\n              content.write(\".\", pos, \"ascii\");\n              pos++;\n\n              if (Buffer.isBuffer(payload)) {\n                payload.copy(content, pos);\n              } else {\n                content.write(payload, pos, \"binary\");\n              }\n              sig.content = content;\n              return sig;\n            });\n\n            p = p.then(function(sig) {\n              return sig.key.verify(sig.header.alg,\n                                    sig.content,\n                                    sig.signature);\n            });\n\n            p = p.then(function(result) {\n              var payload = sig.payload;\n              payload = base64url.decode(payload);\n              return {\n                protected: sig.protected,\n                header: sig.header,\n                payload: payload,\n                signature: result.mac,\n                key: sig.key\n              };\n            });\n\n            // process any post-verify handlers\n            p = p.then(function(jws) {\n              var processing = [];\n              handlerKeys.forEach(function(h) {\n                h = extraHandlers[h];\n                var p;\n                if (\"object\" === typeof h && \"function\" === typeof h.complete) {\n                  p = h.complete(jws);\n                }\n                if (p) {\n                  processing.push(Promise.resolve(p));\n                }\n              });\n              return Promise.all(processing).then(function() {\n                // don't actually care about individual handler results\n                // assume {jws} is updated\n                return jws;\n              });\n            });\n            p.then(resolve, processSig);\n          };\n          processSig();\n        });\n      });\n      return promise;\n    }\n  });\n};\n\n/**\n * @description\n * Creates a new JWS.Verifier with the given Key or KeyStore.\n *\n * @param {JWK.Key|JWK.KeyStore} ks The Key or KeyStore to use for verification.\n * @returns {JWS.Verifier} The new Verifier.\n */\nfunction createVerify(ks, opts) {\n  var vfy = new JWSVerifier(ks, opts);\n\n  return vfy;\n}\n\nmodule.exports = {\n  verifier: JWSVerifier,\n  createVerify: createVerify\n};\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/node-jose/lib/jws/verify.js","original":{"line":1,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/node-jose/lib/jws/verify.js","original":{"line":2,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/node-jose/lib/jws/verify.js","original":{"line":3,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/node-jose/lib/jws/verify.js","original":{"line":4,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/node-jose/lib/jws/verify.js","original":{"line":5,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/node-jose/lib/jws/verify.js","original":{"line":6,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/node-jose/lib/jws/verify.js","original":{"line":7,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/node-jose/lib/jws/verify.js","original":{"line":8,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/node-jose/lib/jws/verify.js","original":{"line":9,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/node-jose/lib/jws/verify.js","original":{"line":10,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/node-jose/lib/jws/verify.js","original":{"line":11,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/node-jose/lib/jws/verify.js","original":{"line":12,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/node-jose/lib/jws/verify.js","original":{"line":13,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/node-jose/lib/jws/verify.js","original":{"line":14,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/node-jose/lib/jws/verify.js","original":{"line":15,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/node-jose/lib/jws/verify.js","original":{"line":16,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/node-jose/lib/jws/verify.js","original":{"line":17,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/node-jose/lib/jws/verify.js","original":{"line":18,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/node-jose/lib/jws/verify.js","original":{"line":19,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/node-jose/lib/jws/verify.js","original":{"line":20,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/node-jose/lib/jws/verify.js","original":{"line":21,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/node-jose/lib/jws/verify.js","original":{"line":22,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/node-jose/lib/jws/verify.js","original":{"line":23,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/node-jose/lib/jws/verify.js","original":{"line":24,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/node-jose/lib/jws/verify.js","original":{"line":25,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/node-jose/lib/jws/verify.js","original":{"line":26,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/node-jose/lib/jws/verify.js","original":{"line":27,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/node-jose/lib/jws/verify.js","original":{"line":28,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/node-jose/lib/jws/verify.js","original":{"line":29,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/node-jose/lib/jws/verify.js","original":{"line":30,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/node-jose/lib/jws/verify.js","original":{"line":31,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/node-jose/lib/jws/verify.js","original":{"line":32,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/node-jose/lib/jws/verify.js","original":{"line":33,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/node-jose/lib/jws/verify.js","original":{"line":34,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/node-jose/lib/jws/verify.js","original":{"line":35,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/node-jose/lib/jws/verify.js","original":{"line":36,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/node-jose/lib/jws/verify.js","original":{"line":37,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/node-jose/lib/jws/verify.js","original":{"line":38,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/node-jose/lib/jws/verify.js","original":{"line":39,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/node-jose/lib/jws/verify.js","original":{"line":40,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/node-jose/lib/jws/verify.js","original":{"line":41,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/node-jose/lib/jws/verify.js","original":{"line":42,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/node-jose/lib/jws/verify.js","original":{"line":43,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/node-jose/lib/jws/verify.js","original":{"line":44,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/node-jose/lib/jws/verify.js","original":{"line":45,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/node-jose/lib/jws/verify.js","original":{"line":46,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/node-jose/lib/jws/verify.js","original":{"line":47,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/node-jose/lib/jws/verify.js","original":{"line":48,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/node-jose/lib/jws/verify.js","original":{"line":49,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/node-jose/lib/jws/verify.js","original":{"line":50,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/node-jose/lib/jws/verify.js","original":{"line":51,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/node-jose/lib/jws/verify.js","original":{"line":52,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/node-jose/lib/jws/verify.js","original":{"line":53,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/node-jose/lib/jws/verify.js","original":{"line":54,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/node-jose/lib/jws/verify.js","original":{"line":55,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/node-jose/lib/jws/verify.js","original":{"line":56,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/node-jose/lib/jws/verify.js","original":{"line":57,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/node-jose/lib/jws/verify.js","original":{"line":58,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/node-jose/lib/jws/verify.js","original":{"line":59,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/node-jose/lib/jws/verify.js","original":{"line":60,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/node-jose/lib/jws/verify.js","original":{"line":61,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/node-jose/lib/jws/verify.js","original":{"line":62,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/node-jose/lib/jws/verify.js","original":{"line":63,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/node-jose/lib/jws/verify.js","original":{"line":64,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/node-jose/lib/jws/verify.js","original":{"line":65,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/node-jose/lib/jws/verify.js","original":{"line":66,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/node-jose/lib/jws/verify.js","original":{"line":67,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/node-jose/lib/jws/verify.js","original":{"line":68,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/node-jose/lib/jws/verify.js","original":{"line":69,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/node-jose/lib/jws/verify.js","original":{"line":70,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/node-jose/lib/jws/verify.js","original":{"line":71,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/node-jose/lib/jws/verify.js","original":{"line":72,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/node-jose/lib/jws/verify.js","original":{"line":73,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/node-jose/lib/jws/verify.js","original":{"line":74,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/node-jose/lib/jws/verify.js","original":{"line":75,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/node-jose/lib/jws/verify.js","original":{"line":76,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/node-jose/lib/jws/verify.js","original":{"line":77,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/node-jose/lib/jws/verify.js","original":{"line":78,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/node-jose/lib/jws/verify.js","original":{"line":79,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/node-jose/lib/jws/verify.js","original":{"line":80,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/node-jose/lib/jws/verify.js","original":{"line":81,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/node-jose/lib/jws/verify.js","original":{"line":82,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/node-jose/lib/jws/verify.js","original":{"line":83,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/node-jose/lib/jws/verify.js","original":{"line":84,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/node-jose/lib/jws/verify.js","original":{"line":85,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/node-jose/lib/jws/verify.js","original":{"line":86,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/node-jose/lib/jws/verify.js","original":{"line":87,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/node-jose/lib/jws/verify.js","original":{"line":88,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/node-jose/lib/jws/verify.js","original":{"line":89,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/node-jose/lib/jws/verify.js","original":{"line":90,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/node-jose/lib/jws/verify.js","original":{"line":91,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/node-jose/lib/jws/verify.js","original":{"line":92,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/node-jose/lib/jws/verify.js","original":{"line":93,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/node-jose/lib/jws/verify.js","original":{"line":94,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/node-jose/lib/jws/verify.js","original":{"line":95,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/node-jose/lib/jws/verify.js","original":{"line":96,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/node-jose/lib/jws/verify.js","original":{"line":97,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/node-jose/lib/jws/verify.js","original":{"line":98,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/node-jose/lib/jws/verify.js","original":{"line":99,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/node-jose/lib/jws/verify.js","original":{"line":100,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/node-jose/lib/jws/verify.js","original":{"line":101,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/node-jose/lib/jws/verify.js","original":{"line":102,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/node-jose/lib/jws/verify.js","original":{"line":103,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/node-jose/lib/jws/verify.js","original":{"line":104,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/node-jose/lib/jws/verify.js","original":{"line":105,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/node-jose/lib/jws/verify.js","original":{"line":106,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/node-jose/lib/jws/verify.js","original":{"line":107,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/node-jose/lib/jws/verify.js","original":{"line":108,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/node-jose/lib/jws/verify.js","original":{"line":109,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/node-jose/lib/jws/verify.js","original":{"line":110,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/node-jose/lib/jws/verify.js","original":{"line":111,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/node-jose/lib/jws/verify.js","original":{"line":112,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/node-jose/lib/jws/verify.js","original":{"line":113,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/node-jose/lib/jws/verify.js","original":{"line":114,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules/node-jose/lib/jws/verify.js","original":{"line":115,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules/node-jose/lib/jws/verify.js","original":{"line":116,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules/node-jose/lib/jws/verify.js","original":{"line":117,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules/node-jose/lib/jws/verify.js","original":{"line":118,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules/node-jose/lib/jws/verify.js","original":{"line":119,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules/node-jose/lib/jws/verify.js","original":{"line":120,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules/node-jose/lib/jws/verify.js","original":{"line":121,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules/node-jose/lib/jws/verify.js","original":{"line":122,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules/node-jose/lib/jws/verify.js","original":{"line":123,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules/node-jose/lib/jws/verify.js","original":{"line":124,"column":0},"generated":{"line":125,"column":0}},{"source":"node_modules/node-jose/lib/jws/verify.js","original":{"line":125,"column":0},"generated":{"line":126,"column":0}},{"source":"node_modules/node-jose/lib/jws/verify.js","original":{"line":126,"column":0},"generated":{"line":127,"column":0}},{"source":"node_modules/node-jose/lib/jws/verify.js","original":{"line":127,"column":0},"generated":{"line":128,"column":0}},{"source":"node_modules/node-jose/lib/jws/verify.js","original":{"line":128,"column":0},"generated":{"line":129,"column":0}},{"source":"node_modules/node-jose/lib/jws/verify.js","original":{"line":129,"column":0},"generated":{"line":130,"column":0}},{"source":"node_modules/node-jose/lib/jws/verify.js","original":{"line":130,"column":0},"generated":{"line":131,"column":0}},{"source":"node_modules/node-jose/lib/jws/verify.js","original":{"line":131,"column":0},"generated":{"line":132,"column":0}},{"source":"node_modules/node-jose/lib/jws/verify.js","original":{"line":132,"column":0},"generated":{"line":133,"column":0}},{"source":"node_modules/node-jose/lib/jws/verify.js","original":{"line":133,"column":0},"generated":{"line":134,"column":0}},{"source":"node_modules/node-jose/lib/jws/verify.js","original":{"line":134,"column":0},"generated":{"line":135,"column":0}},{"source":"node_modules/node-jose/lib/jws/verify.js","original":{"line":135,"column":0},"generated":{"line":136,"column":0}},{"source":"node_modules/node-jose/lib/jws/verify.js","original":{"line":136,"column":0},"generated":{"line":137,"column":0}},{"source":"node_modules/node-jose/lib/jws/verify.js","original":{"line":137,"column":0},"generated":{"line":138,"column":0}},{"source":"node_modules/node-jose/lib/jws/verify.js","original":{"line":138,"column":0},"generated":{"line":139,"column":0}},{"source":"node_modules/node-jose/lib/jws/verify.js","original":{"line":139,"column":0},"generated":{"line":140,"column":0}},{"source":"node_modules/node-jose/lib/jws/verify.js","original":{"line":140,"column":0},"generated":{"line":141,"column":0}},{"source":"node_modules/node-jose/lib/jws/verify.js","original":{"line":141,"column":0},"generated":{"line":142,"column":0}},{"source":"node_modules/node-jose/lib/jws/verify.js","original":{"line":142,"column":0},"generated":{"line":143,"column":0}},{"source":"node_modules/node-jose/lib/jws/verify.js","original":{"line":143,"column":0},"generated":{"line":144,"column":0}},{"source":"node_modules/node-jose/lib/jws/verify.js","original":{"line":144,"column":0},"generated":{"line":145,"column":0}},{"source":"node_modules/node-jose/lib/jws/verify.js","original":{"line":145,"column":0},"generated":{"line":146,"column":0}},{"source":"node_modules/node-jose/lib/jws/verify.js","original":{"line":146,"column":0},"generated":{"line":147,"column":0}},{"source":"node_modules/node-jose/lib/jws/verify.js","original":{"line":147,"column":0},"generated":{"line":148,"column":0}},{"source":"node_modules/node-jose/lib/jws/verify.js","original":{"line":148,"column":0},"generated":{"line":149,"column":0}},{"source":"node_modules/node-jose/lib/jws/verify.js","original":{"line":149,"column":0},"generated":{"line":150,"column":0}},{"source":"node_modules/node-jose/lib/jws/verify.js","original":{"line":150,"column":0},"generated":{"line":151,"column":0}},{"source":"node_modules/node-jose/lib/jws/verify.js","original":{"line":151,"column":0},"generated":{"line":152,"column":0}},{"source":"node_modules/node-jose/lib/jws/verify.js","original":{"line":152,"column":0},"generated":{"line":153,"column":0}},{"source":"node_modules/node-jose/lib/jws/verify.js","original":{"line":153,"column":0},"generated":{"line":154,"column":0}},{"source":"node_modules/node-jose/lib/jws/verify.js","original":{"line":154,"column":0},"generated":{"line":155,"column":0}},{"source":"node_modules/node-jose/lib/jws/verify.js","original":{"line":155,"column":0},"generated":{"line":156,"column":0}},{"source":"node_modules/node-jose/lib/jws/verify.js","original":{"line":156,"column":0},"generated":{"line":157,"column":0}},{"source":"node_modules/node-jose/lib/jws/verify.js","original":{"line":157,"column":0},"generated":{"line":158,"column":0}},{"source":"node_modules/node-jose/lib/jws/verify.js","original":{"line":158,"column":0},"generated":{"line":159,"column":0}},{"source":"node_modules/node-jose/lib/jws/verify.js","original":{"line":159,"column":0},"generated":{"line":160,"column":0}},{"source":"node_modules/node-jose/lib/jws/verify.js","original":{"line":160,"column":0},"generated":{"line":161,"column":0}},{"source":"node_modules/node-jose/lib/jws/verify.js","original":{"line":161,"column":0},"generated":{"line":162,"column":0}},{"source":"node_modules/node-jose/lib/jws/verify.js","original":{"line":162,"column":0},"generated":{"line":163,"column":0}},{"source":"node_modules/node-jose/lib/jws/verify.js","original":{"line":163,"column":0},"generated":{"line":164,"column":0}},{"source":"node_modules/node-jose/lib/jws/verify.js","original":{"line":164,"column":0},"generated":{"line":165,"column":0}},{"source":"node_modules/node-jose/lib/jws/verify.js","original":{"line":165,"column":0},"generated":{"line":166,"column":0}},{"source":"node_modules/node-jose/lib/jws/verify.js","original":{"line":166,"column":0},"generated":{"line":167,"column":0}},{"source":"node_modules/node-jose/lib/jws/verify.js","original":{"line":167,"column":0},"generated":{"line":168,"column":0}},{"source":"node_modules/node-jose/lib/jws/verify.js","original":{"line":168,"column":0},"generated":{"line":169,"column":0}},{"source":"node_modules/node-jose/lib/jws/verify.js","original":{"line":169,"column":0},"generated":{"line":170,"column":0}},{"source":"node_modules/node-jose/lib/jws/verify.js","original":{"line":170,"column":0},"generated":{"line":171,"column":0}},{"source":"node_modules/node-jose/lib/jws/verify.js","original":{"line":171,"column":0},"generated":{"line":172,"column":0}},{"source":"node_modules/node-jose/lib/jws/verify.js","original":{"line":172,"column":0},"generated":{"line":173,"column":0}},{"source":"node_modules/node-jose/lib/jws/verify.js","original":{"line":173,"column":0},"generated":{"line":174,"column":0}},{"source":"node_modules/node-jose/lib/jws/verify.js","original":{"line":174,"column":0},"generated":{"line":175,"column":0}},{"source":"node_modules/node-jose/lib/jws/verify.js","original":{"line":175,"column":0},"generated":{"line":176,"column":0}},{"source":"node_modules/node-jose/lib/jws/verify.js","original":{"line":176,"column":0},"generated":{"line":177,"column":0}},{"source":"node_modules/node-jose/lib/jws/verify.js","original":{"line":177,"column":0},"generated":{"line":178,"column":0}},{"source":"node_modules/node-jose/lib/jws/verify.js","original":{"line":178,"column":0},"generated":{"line":179,"column":0}},{"source":"node_modules/node-jose/lib/jws/verify.js","original":{"line":179,"column":0},"generated":{"line":180,"column":0}},{"source":"node_modules/node-jose/lib/jws/verify.js","original":{"line":180,"column":0},"generated":{"line":181,"column":0}},{"source":"node_modules/node-jose/lib/jws/verify.js","original":{"line":181,"column":0},"generated":{"line":182,"column":0}},{"source":"node_modules/node-jose/lib/jws/verify.js","original":{"line":182,"column":0},"generated":{"line":183,"column":0}},{"source":"node_modules/node-jose/lib/jws/verify.js","original":{"line":183,"column":0},"generated":{"line":184,"column":0}},{"source":"node_modules/node-jose/lib/jws/verify.js","original":{"line":184,"column":0},"generated":{"line":185,"column":0}},{"source":"node_modules/node-jose/lib/jws/verify.js","original":{"line":185,"column":0},"generated":{"line":186,"column":0}},{"source":"node_modules/node-jose/lib/jws/verify.js","original":{"line":186,"column":0},"generated":{"line":187,"column":0}},{"source":"node_modules/node-jose/lib/jws/verify.js","original":{"line":187,"column":0},"generated":{"line":188,"column":0}},{"source":"node_modules/node-jose/lib/jws/verify.js","original":{"line":188,"column":0},"generated":{"line":189,"column":0}},{"source":"node_modules/node-jose/lib/jws/verify.js","original":{"line":189,"column":0},"generated":{"line":190,"column":0}},{"source":"node_modules/node-jose/lib/jws/verify.js","original":{"line":190,"column":0},"generated":{"line":191,"column":0}},{"source":"node_modules/node-jose/lib/jws/verify.js","original":{"line":191,"column":0},"generated":{"line":192,"column":0}},{"source":"node_modules/node-jose/lib/jws/verify.js","original":{"line":192,"column":0},"generated":{"line":193,"column":0}},{"source":"node_modules/node-jose/lib/jws/verify.js","original":{"line":193,"column":0},"generated":{"line":194,"column":0}},{"source":"node_modules/node-jose/lib/jws/verify.js","original":{"line":194,"column":0},"generated":{"line":195,"column":0}},{"source":"node_modules/node-jose/lib/jws/verify.js","original":{"line":195,"column":0},"generated":{"line":196,"column":0}},{"source":"node_modules/node-jose/lib/jws/verify.js","original":{"line":196,"column":0},"generated":{"line":197,"column":0}},{"source":"node_modules/node-jose/lib/jws/verify.js","original":{"line":197,"column":0},"generated":{"line":198,"column":0}},{"source":"node_modules/node-jose/lib/jws/verify.js","original":{"line":198,"column":0},"generated":{"line":199,"column":0}},{"source":"node_modules/node-jose/lib/jws/verify.js","original":{"line":199,"column":0},"generated":{"line":200,"column":0}},{"source":"node_modules/node-jose/lib/jws/verify.js","original":{"line":200,"column":0},"generated":{"line":201,"column":0}},{"source":"node_modules/node-jose/lib/jws/verify.js","original":{"line":201,"column":0},"generated":{"line":202,"column":0}},{"source":"node_modules/node-jose/lib/jws/verify.js","original":{"line":202,"column":0},"generated":{"line":203,"column":0}},{"source":"node_modules/node-jose/lib/jws/verify.js","original":{"line":203,"column":0},"generated":{"line":204,"column":0}},{"source":"node_modules/node-jose/lib/jws/verify.js","original":{"line":204,"column":0},"generated":{"line":205,"column":0}},{"source":"node_modules/node-jose/lib/jws/verify.js","original":{"line":205,"column":0},"generated":{"line":206,"column":0}},{"source":"node_modules/node-jose/lib/jws/verify.js","original":{"line":206,"column":0},"generated":{"line":207,"column":0}},{"source":"node_modules/node-jose/lib/jws/verify.js","original":{"line":207,"column":0},"generated":{"line":208,"column":0}},{"source":"node_modules/node-jose/lib/jws/verify.js","original":{"line":208,"column":0},"generated":{"line":209,"column":0}},{"source":"node_modules/node-jose/lib/jws/verify.js","original":{"line":209,"column":0},"generated":{"line":210,"column":0}},{"source":"node_modules/node-jose/lib/jws/verify.js","original":{"line":210,"column":0},"generated":{"line":211,"column":0}},{"source":"node_modules/node-jose/lib/jws/verify.js","original":{"line":211,"column":0},"generated":{"line":212,"column":0}},{"source":"node_modules/node-jose/lib/jws/verify.js","original":{"line":212,"column":0},"generated":{"line":213,"column":0}},{"source":"node_modules/node-jose/lib/jws/verify.js","original":{"line":213,"column":0},"generated":{"line":214,"column":0}},{"source":"node_modules/node-jose/lib/jws/verify.js","original":{"line":214,"column":0},"generated":{"line":215,"column":0}},{"source":"node_modules/node-jose/lib/jws/verify.js","original":{"line":215,"column":0},"generated":{"line":216,"column":0}},{"source":"node_modules/node-jose/lib/jws/verify.js","original":{"line":216,"column":0},"generated":{"line":217,"column":0}},{"source":"node_modules/node-jose/lib/jws/verify.js","original":{"line":217,"column":0},"generated":{"line":218,"column":0}},{"source":"node_modules/node-jose/lib/jws/verify.js","original":{"line":218,"column":0},"generated":{"line":219,"column":0}},{"source":"node_modules/node-jose/lib/jws/verify.js","original":{"line":219,"column":0},"generated":{"line":220,"column":0}},{"source":"node_modules/node-jose/lib/jws/verify.js","original":{"line":220,"column":0},"generated":{"line":221,"column":0}},{"source":"node_modules/node-jose/lib/jws/verify.js","original":{"line":221,"column":0},"generated":{"line":222,"column":0}},{"source":"node_modules/node-jose/lib/jws/verify.js","original":{"line":222,"column":0},"generated":{"line":223,"column":0}},{"source":"node_modules/node-jose/lib/jws/verify.js","original":{"line":223,"column":0},"generated":{"line":224,"column":0}},{"source":"node_modules/node-jose/lib/jws/verify.js","original":{"line":224,"column":0},"generated":{"line":225,"column":0}},{"source":"node_modules/node-jose/lib/jws/verify.js","original":{"line":225,"column":0},"generated":{"line":226,"column":0}},{"source":"node_modules/node-jose/lib/jws/verify.js","original":{"line":226,"column":0},"generated":{"line":227,"column":0}},{"source":"node_modules/node-jose/lib/jws/verify.js","original":{"line":227,"column":0},"generated":{"line":228,"column":0}},{"source":"node_modules/node-jose/lib/jws/verify.js","original":{"line":228,"column":0},"generated":{"line":229,"column":0}},{"source":"node_modules/node-jose/lib/jws/verify.js","original":{"line":229,"column":0},"generated":{"line":230,"column":0}},{"source":"node_modules/node-jose/lib/jws/verify.js","original":{"line":230,"column":0},"generated":{"line":231,"column":0}},{"source":"node_modules/node-jose/lib/jws/verify.js","original":{"line":231,"column":0},"generated":{"line":232,"column":0}},{"source":"node_modules/node-jose/lib/jws/verify.js","original":{"line":232,"column":0},"generated":{"line":233,"column":0}},{"source":"node_modules/node-jose/lib/jws/verify.js","original":{"line":233,"column":0},"generated":{"line":234,"column":0}},{"source":"node_modules/node-jose/lib/jws/verify.js","original":{"line":234,"column":0},"generated":{"line":235,"column":0}},{"source":"node_modules/node-jose/lib/jws/verify.js","original":{"line":235,"column":0},"generated":{"line":236,"column":0}},{"source":"node_modules/node-jose/lib/jws/verify.js","original":{"line":236,"column":0},"generated":{"line":237,"column":0}},{"source":"node_modules/node-jose/lib/jws/verify.js","original":{"line":237,"column":0},"generated":{"line":238,"column":0}},{"source":"node_modules/node-jose/lib/jws/verify.js","original":{"line":238,"column":0},"generated":{"line":239,"column":0}},{"source":"node_modules/node-jose/lib/jws/verify.js","original":{"line":239,"column":0},"generated":{"line":240,"column":0}},{"source":"node_modules/node-jose/lib/jws/verify.js","original":{"line":240,"column":0},"generated":{"line":241,"column":0}},{"source":"node_modules/node-jose/lib/jws/verify.js","original":{"line":241,"column":0},"generated":{"line":242,"column":0}},{"source":"node_modules/node-jose/lib/jws/verify.js","original":{"line":242,"column":0},"generated":{"line":243,"column":0}},{"source":"node_modules/node-jose/lib/jws/verify.js","original":{"line":243,"column":0},"generated":{"line":244,"column":0}},{"source":"node_modules/node-jose/lib/jws/verify.js","original":{"line":244,"column":0},"generated":{"line":245,"column":0}},{"source":"node_modules/node-jose/lib/jws/verify.js","original":{"line":245,"column":0},"generated":{"line":246,"column":0}},{"source":"node_modules/node-jose/lib/jws/verify.js","original":{"line":246,"column":0},"generated":{"line":247,"column":0}},{"source":"node_modules/node-jose/lib/jws/verify.js","original":{"line":247,"column":0},"generated":{"line":248,"column":0}},{"source":"node_modules/node-jose/lib/jws/verify.js","original":{"line":248,"column":0},"generated":{"line":249,"column":0}},{"source":"node_modules/node-jose/lib/jws/verify.js","original":{"line":249,"column":0},"generated":{"line":250,"column":0}},{"source":"node_modules/node-jose/lib/jws/verify.js","original":{"line":250,"column":0},"generated":{"line":251,"column":0}},{"source":"node_modules/node-jose/lib/jws/verify.js","original":{"line":251,"column":0},"generated":{"line":252,"column":0}},{"source":"node_modules/node-jose/lib/jws/verify.js","original":{"line":252,"column":0},"generated":{"line":253,"column":0}},{"source":"node_modules/node-jose/lib/jws/verify.js","original":{"line":253,"column":0},"generated":{"line":254,"column":0}},{"source":"node_modules/node-jose/lib/jws/verify.js","original":{"line":254,"column":0},"generated":{"line":255,"column":0}},{"source":"node_modules/node-jose/lib/jws/verify.js","original":{"line":255,"column":0},"generated":{"line":256,"column":0}},{"source":"node_modules/node-jose/lib/jws/verify.js","original":{"line":256,"column":0},"generated":{"line":257,"column":0}},{"source":"node_modules/node-jose/lib/jws/verify.js","original":{"line":257,"column":0},"generated":{"line":258,"column":0}},{"source":"node_modules/node-jose/lib/jws/verify.js","original":{"line":258,"column":0},"generated":{"line":259,"column":0}},{"source":"node_modules/node-jose/lib/jws/verify.js","original":{"line":259,"column":0},"generated":{"line":260,"column":0}},{"source":"node_modules/node-jose/lib/jws/verify.js","original":{"line":260,"column":0},"generated":{"line":261,"column":0}},{"source":"node_modules/node-jose/lib/jws/verify.js","original":{"line":261,"column":0},"generated":{"line":262,"column":0}},{"source":"node_modules/node-jose/lib/jws/verify.js","original":{"line":262,"column":0},"generated":{"line":263,"column":0}},{"source":"node_modules/node-jose/lib/jws/verify.js","original":{"line":263,"column":0},"generated":{"line":264,"column":0}},{"source":"node_modules/node-jose/lib/jws/verify.js","original":{"line":264,"column":0},"generated":{"line":265,"column":0}},{"source":"node_modules/node-jose/lib/jws/verify.js","original":{"line":265,"column":0},"generated":{"line":266,"column":0}},{"source":"node_modules/node-jose/lib/jws/verify.js","original":{"line":266,"column":0},"generated":{"line":267,"column":0}},{"source":"node_modules/node-jose/lib/jws/verify.js","original":{"line":267,"column":0},"generated":{"line":268,"column":0}},{"source":"node_modules/node-jose/lib/jws/verify.js","original":{"line":268,"column":0},"generated":{"line":269,"column":0}},{"source":"node_modules/node-jose/lib/jws/verify.js","original":{"line":269,"column":0},"generated":{"line":270,"column":0}},{"source":"node_modules/node-jose/lib/jws/verify.js","original":{"line":270,"column":0},"generated":{"line":271,"column":0}},{"source":"node_modules/node-jose/lib/jws/verify.js","original":{"line":271,"column":0},"generated":{"line":272,"column":0}},{"source":"node_modules/node-jose/lib/jws/verify.js","original":{"line":272,"column":0},"generated":{"line":273,"column":0}}],"sources":{"node_modules/node-jose/lib/jws/verify.js":"/*!\n * jws/verify.js - Verifies from a JWS\n *\n * Copyright (c) 2015 Cisco Systems, Inc. See LICENSE file.\n */\n\"use strict\";\n\nvar clone = require(\"lodash/clone\"),\n    merge = require(\"../util/merge\"),\n    base64url = require(\"../util/base64url\"),\n    AlgConfig = require(\"../util/algconfig\"),\n    JWK = require(\"../jwk\");\n\nvar DEFAULT_OPTIONS = {\n  algorithms: \"*\",\n  allowEmbeddedKey: false\n};\n\n/**\n * @class JWS.Verifier\n * @classdesc Parser of signed content.\n *\n * @description\n * **NOTE:** this class cannot be instantiated directly. Instead call {@link\n * JWS.createVerify}.\n */\nvar JWSVerifier = function(ks, globalOpts) {\n  var assumedKey,\n      keystore;\n\n  if (JWK.isKey(ks)) {\n    assumedKey = ks;\n    keystore = assumedKey.keystore;\n  } else if (JWK.isKeyStore(ks)) {\n    keystore = ks;\n  } else {\n    keystore = JWK.createKeyStore();\n  }\n\n  globalOpts = merge(DEFAULT_OPTIONS, globalOpts);\n\n  Object.defineProperty(this, \"defaultKey\", {\n    value: assumedKey || undefined,\n    enumerable: true\n  });\n  Object.defineProperty(this, \"keystore\", {\n    value: keystore,\n    enumerable: true\n  });\n\n  Object.defineProperty(this, \"verify\", {\n    value: function(input, opts) {\n      opts = merge({}, globalOpts, opts || {});\n      var extraHandlers = opts.handlers || {};\n      var handlerKeys = Object.keys(extraHandlers);\n      var algSpec = new AlgConfig(opts.algorithms);\n\n      if (\"string\" === typeof input) {\n        input = input.split(\".\");\n        input = {\n          payload: input[1],\n          signatures: [\n            {\n              protected: input[0],\n              signature: input[2]\n            }\n          ]\n        };\n      } else if (!input || \"object\" !== typeof input) {\n        throw new Error(\"invalid input\");\n      }\n\n      // fixup \"flattened JSON\" to look like \"general JSON\"\n      if (input.signature) {\n        input.signatures = [\n          {\n            protected: input.protected || undefined,\n            header: input.header || undefined,\n            signature: input.signature\n          }\n        ];\n      }\n\n      // ensure signatories exists\n      var sigList = input.signatures || [{}];\n\n      // combine fields and decode signature per signatory\n      sigList = sigList.map(function(s) {\n        var header = clone(s.header || {});\n        var protect = s.protected ?\n                      JSON.parse(base64url.decode(s.protected, \"utf8\")) :\n                      {};\n        header = merge(header, protect);\n        var signature = base64url.decode(s.signature);\n\n        // process allowed algorithims\n        if (!algSpec.match(header.alg)) {\n          return Promise.reject(new Error(\"Algorithm not allowed: \" + header.alg));\n        }\n\n        // process \"crit\" first\n        var crit = protect.crit;\n        if (crit) {\n          if (!Array.isArray(crit)) {\n            return Promise.reject(new Error(\"Invalid 'crit' header\"));\n          }\n          for (var idx = 0; crit.length > idx; idx++) {\n            if (-1 === handlerKeys.indexOf(crit[idx])) {\n              return Promise.reject(new Error(\n                  \"Critical extension is not supported: \" + crit[idx]\n              ));\n            }\n          }\n        }\n        protect = Object.keys(protect);\n\n        return Promise.resolve({\n          protected: protect,\n          aad: s.protected || \"\",\n          header: header,\n          signature: signature\n        });\n      });\n\n      var promise = Promise.all(sigList);\n      promise = promise.then(function(sigList) {\n        return new Promise(function(resolve, reject) {\n          var processSig = function() {\n            var sig = sigList.shift();\n            if (!sig) {\n              reject(new Error(\"no key found\"));\n              return;\n            }\n\n            sig = merge({}, sig, {\n              payload: input.payload\n            });\n            var p = Promise.resolve(sig);\n            // find the key\n            p = p.then(function(sig) {\n              var algKey;\n              // TODO: resolve jku, x5c, x5u\n              if (opts.allowEmbeddedKey && sig.header.jwk) {\n                algKey = JWK.asKey(sig.header.jwk);\n              } else if (opts.allowEmbeddedKey && sig.header.x5c) {\n                algKey = sig.header.x5c[0];\n                algKey = Buffer.from(algKey, \"base64\");\n                // TODO: callback to validate chain\n                algKey = JWK.asKey(algKey, \"pkix\");\n              } else {\n                algKey = Promise.resolve(assumedKey || keystore.get({\n                  use: \"sig\",\n                  alg: sig.header.alg,\n                  kid: sig.header.kid\n                }));\n              }\n              return algKey.then(function(k) {\n                if (!k) {\n                  return Promise.reject(new Error(\"key does not match\"));\n                }\n                sig.key = k;\n                return sig;\n              });\n            });\n\n            // process any prepare-verify handlers\n            p = p.then(function(sig) {\n              var processing = [];\n              handlerKeys.forEach(function(h) {\n                h = extraHandlers[h];\n                var p;\n                if (\"function\" === typeof h) {\n                  p = h(sig);\n                } else if (\"object\" === typeof h && \"function\" === typeof h.prepare) {\n                  p = h.prepare(sig);\n                }\n                if (p) {\n                  processing.push(Promise.resolve(p));\n                }\n              });\n              return Promise.all(processing).then(function() {\n                // don't actually care about individual handler results\n                // assume {sig} is updated\n                return sig;\n              });\n            });\n\n            // prepare verify inputs\n            p = p.then(function(sig) {\n              var aad = sig.aad || \"\",\n                  payload = sig.payload || \"\";\n              var content = Buffer.alloc(1 + aad.length + payload.length),\n                  pos = 0;\n              content.write(aad, pos, \"ascii\");\n              pos += aad.length;\n              content.write(\".\", pos, \"ascii\");\n              pos++;\n\n              if (Buffer.isBuffer(payload)) {\n                payload.copy(content, pos);\n              } else {\n                content.write(payload, pos, \"binary\");\n              }\n              sig.content = content;\n              return sig;\n            });\n\n            p = p.then(function(sig) {\n              return sig.key.verify(sig.header.alg,\n                                    sig.content,\n                                    sig.signature);\n            });\n\n            p = p.then(function(result) {\n              var payload = sig.payload;\n              payload = base64url.decode(payload);\n              return {\n                protected: sig.protected,\n                header: sig.header,\n                payload: payload,\n                signature: result.mac,\n                key: sig.key\n              };\n            });\n\n            // process any post-verify handlers\n            p = p.then(function(jws) {\n              var processing = [];\n              handlerKeys.forEach(function(h) {\n                h = extraHandlers[h];\n                var p;\n                if (\"object\" === typeof h && \"function\" === typeof h.complete) {\n                  p = h.complete(jws);\n                }\n                if (p) {\n                  processing.push(Promise.resolve(p));\n                }\n              });\n              return Promise.all(processing).then(function() {\n                // don't actually care about individual handler results\n                // assume {jws} is updated\n                return jws;\n              });\n            });\n            p.then(resolve, processSig);\n          };\n          processSig();\n        });\n      });\n      return promise;\n    }\n  });\n};\n\n/**\n * @description\n * Creates a new JWS.Verifier with the given Key or KeyStore.\n *\n * @param {JWK.Key|JWK.KeyStore} ks The Key or KeyStore to use for verification.\n * @returns {JWS.Verifier} The new Verifier.\n */\nfunction createVerify(ks, opts) {\n  var vfy = new JWSVerifier(ks, opts);\n\n  return vfy;\n}\n\nmodule.exports = {\n  verifier: JWSVerifier,\n  createVerify: createVerify\n};\n"},"lineCount":273}},"error":null,"hash":"60f98d4d38c3a20d40eee7e76e12f9e1","cacheData":{"env":{}}}