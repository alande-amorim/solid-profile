{"id":"node_modules/@inrupt/solid-client-authn-browser/dist/login/oidc/oidcHandlers/LegacyImplicitFlowOidcHandler.js","dependencies":[{"name":"/Users/amorim.alande/Projects/pod-profile/node_modules/@inrupt/solid-client-authn-browser/dist/login/oidc/oidcHandlers/LegacyImplicitFlowOidcHandler.js.map","includedInParent":true,"mtime":1611945169054},{"name":"/Users/amorim.alande/Projects/pod-profile/node_modules/@inrupt/solid-client-authn-browser/src/login/oidc/oidcHandlers/LegacyImplicitFlowOidcHandler.ts","includedInParent":true,"mtime":1611945169054},{"name":"/Users/amorim.alande/Projects/pod-profile/package.json","includedInParent":true,"mtime":1612372540913},{"name":"/Users/amorim.alande/Projects/pod-profile/node_modules/@inrupt/solid-client-authn-browser/package.json","includedInParent":true,"mtime":1611945169054},{"name":"tsyringe","loc":{"line":15,"column":27},"parent":"/Users/amorim.alande/Projects/pod-profile/node_modules/@inrupt/solid-client-authn-browser/dist/login/oidc/oidcHandlers/LegacyImplicitFlowOidcHandler.js","resolved":"/Users/amorim.alande/Projects/pod-profile/node_modules/tsyringe/dist/esm5/index.js"},{"name":"@inrupt/oidc-client-ext","loc":{"line":16,"column":34},"parent":"/Users/amorim.alande/Projects/pod-profile/node_modules/@inrupt/solid-client-authn-browser/dist/login/oidc/oidcHandlers/LegacyImplicitFlowOidcHandler.js","resolved":"/Users/amorim.alande/Projects/pod-profile/node_modules/@inrupt/oidc-client-ext/dist/index.es.js"}],"generated":{"js":"\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tsyringe_1 = require(\"tsyringe\");\nconst oidc_client_ext_1 = require(\"@inrupt/oidc-client-ext\");\nlet LegacyImplicitFlowOidcHandler = class LegacyImplicitFlowOidcHandler {\n    constructor(sessionInfoManager, redirector, storageUtility) {\n        this.sessionInfoManager = sessionInfoManager;\n        this.redirector = redirector;\n        this.storageUtility = storageUtility;\n    }\n    async canHandle(oidcLoginOptions) {\n        return !!(oidcLoginOptions.issuerConfiguration.grantTypesSupported &&\n            oidcLoginOptions.issuerConfiguration.grantTypesSupported.indexOf(\"implicit\") > -1);\n    }\n    async handle(oidcLoginOptions) {\n        const query = {\n            client_id: oidcLoginOptions.client.clientId,\n            response_type: \"id_token token\",\n            redirect_uri: oidcLoginOptions.redirectUrl,\n            scope: \"openid webid offline_access\",\n            state: oidcLoginOptions.sessionId,\n        };\n        const [key] = await Promise.all([\n            oidc_client_ext_1.generateJwkForDpop(),\n            this.storageUtility.setForUser(oidcLoginOptions.sessionId, {\n                isLoggedIn: \"false\",\n                sessionId: oidcLoginOptions.sessionId,\n            }, { secure: true }),\n        ]);\n        if (oidcLoginOptions.dpop) {\n            query.dpop = await oidc_client_ext_1.createDpopHeader(oidcLoginOptions.issuer, \"GET\", key);\n        }\n        const sessionInfo = await this.sessionInfoManager.get(oidcLoginOptions.sessionId);\n        if (!sessionInfo) {\n            throw new Error(\"There was a problem creating a session.\");\n        }\n        const requestUrl = new URL(oidcLoginOptions.issuerConfiguration.authorizationEndpoint);\n        for (const queryParamkey of Object.keys(query)) {\n            requestUrl.searchParams.set(queryParamkey, query[queryParamkey]);\n        }\n        this.redirector.redirect(requestUrl.toString(), {\n            handleRedirect: oidcLoginOptions.handleRedirect,\n        });\n        return undefined;\n    }\n};\nLegacyImplicitFlowOidcHandler = __decorate([\n    tsyringe_1.injectable(),\n    __param(0, tsyringe_1.inject(\"sessionInfoManager\")),\n    __param(1, tsyringe_1.inject(\"redirector\")),\n    __param(2, tsyringe_1.inject(\"storageUtility\")),\n    __metadata(\"design:paramtypes\", [Object, Object, Object])\n], LegacyImplicitFlowOidcHandler);\nexports.default = LegacyImplicitFlowOidcHandler;\n"},"sourceMaps":{"js":{"version":3,"file":"LegacyImplicitFlowOidcHandler.js","sourceRoot":"","sources":["../../../../src/login/oidc/oidcHandlers/LegacyImplicitFlowOidcHandler.ts"],"names":[],"mappings":";;;;;;;;;;;;;;AAqCA,uCAA8C;AAC9C,6DAA+E;AAM/E,IAAqB,6BAA6B,GAAlD,MAAqB,6BAA6B;IAChD,YAEU,kBAAuC,EACjB,UAAuB,EACnB,cAA+B;QAFzD,uBAAkB,GAAlB,kBAAkB,CAAqB;QACjB,eAAU,GAAV,UAAU,CAAa;QACnB,mBAAc,GAAd,cAAc,CAAiB;IAChE,CAAC;IAEJ,KAAK,CAAC,SAAS,CAAC,gBAA8B;QAC5C,OAAO,CAAC,CAAC,CACP,gBAAgB,CAAC,mBAAmB,CAAC,mBAAmB;YACxD,gBAAgB,CAAC,mBAAmB,CAAC,mBAAmB,CAAC,OAAO,CAC9D,UAAU,CACX,GAAG,CAAC,CAAC,CACP,CAAC;IACJ,CAAC;IAED,KAAK,CAAC,MAAM,CAAC,gBAA8B;QAIzC,MAAM,KAAK,GAA2B;YACpC,SAAS,EAAE,gBAAgB,CAAC,MAAM,CAAC,QAAQ;YAC3C,aAAa,EAAE,gBAAgB;YAC/B,YAAY,EAAE,gBAAgB,CAAC,WAAW;YAE1C,KAAK,EAAE,6BAA6B;YACpC,KAAK,EAAE,gBAAgB,CAAC,SAAS;SAClC,CAAC;QAEF,MAAM,CAAC,GAAG,CAAC,GAAG,MAAM,OAAO,CAAC,GAAG,CAAC;YAC9B,oCAAkB,EAAE;YACpB,IAAI,CAAC,cAAc,CAAC,UAAU,CAC5B,gBAAgB,CAAC,SAAS,EAC1B;gBACE,UAAU,EAAE,OAAO;gBACnB,SAAS,EAAE,gBAAgB,CAAC,SAAS;aACtC,EACD,EAAE,MAAM,EAAE,IAAI,EAAE,CACjB;SACF,CAAC,CAAC;QAGH,IAAI,gBAAgB,CAAC,IAAI,EAAE;YACzB,KAAK,CAAC,IAAI,GAAG,MAAM,kCAAgB,CAAC,gBAAgB,CAAC,MAAM,EAAE,KAAK,EAAE,GAAG,CAAC,CAAC;SAC1E;QAED,MAAM,WAAW,GAAG,MAAM,IAAI,CAAC,kBAAkB,CAAC,GAAG,CACnD,gBAAgB,CAAC,SAAS,CAC3B,CAAC;QACF,IAAI,CAAC,WAAW,EAAE;YAChB,MAAM,IAAI,KAAK,CAAC,yCAAyC,CAAC,CAAC;SAC5D;QAED,MAAM,UAAU,GAAG,IAAI,GAAG,CACxB,gBAAgB,CAAC,mBAAmB,CAAC,qBAAqB,CAC3D,CAAC;QACF,KAAK,MAAM,aAAa,IAAI,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE;YAC9C,UAAU,CAAC,YAAY,CAAC,GAAG,CAAC,aAAa,EAAE,KAAK,CAAC,aAAa,CAAC,CAAC,CAAC;SAClE;QAID,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,UAAU,CAAC,QAAQ,EAAE,EAAE;YAC9C,cAAc,EAAE,gBAAgB,CAAC,cAAc;SAChD,CAAC,CAAC;QAEH,OAAO,SAAS,CAAC;IACnB,CAAC;CACF,CAAA;AArEoB,6BAA6B;IADjD,qBAAU,EAAE;IAGR,WAAA,iBAAM,CAAC,oBAAoB,CAAC,CAAA;IAE5B,WAAA,iBAAM,CAAC,YAAY,CAAC,CAAA;IACpB,WAAA,iBAAM,CAAC,gBAAgB,CAAC,CAAA;;GALR,6BAA6B,CAqEjD;kBArEoB,6BAA6B","sourcesContent":["/*\n * Copyright 2021 Inrupt Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n\n/**\n * @hidden\n * @packageDocumentation\n */\n\n/**\n * Handler for the Legacy Implicit Flow\n */\nimport {\n  IOidcHandler,\n  IOidcOptions,\n  IRedirector,\n  ISessionInfoManager,\n  IStorageUtility,\n  LoginResult,\n} from \"@inrupt/solid-client-authn-core\";\nimport { inject, injectable } from \"tsyringe\";\nimport { generateJwkForDpop, createDpopHeader } from \"@inrupt/oidc-client-ext\";\n\n/**\n * @hidden\n */\n@injectable()\nexport default class LegacyImplicitFlowOidcHandler implements IOidcHandler {\n  constructor(\n    @inject(\"sessionInfoManager\")\n    private sessionInfoManager: ISessionInfoManager,\n    @inject(\"redirector\") private redirector: IRedirector,\n    @inject(\"storageUtility\") private storageUtility: IStorageUtility\n  ) {}\n\n  async canHandle(oidcLoginOptions: IOidcOptions): Promise<boolean> {\n    return !!(\n      oidcLoginOptions.issuerConfiguration.grantTypesSupported &&\n      oidcLoginOptions.issuerConfiguration.grantTypesSupported.indexOf(\n        \"implicit\"\n      ) > -1\n    );\n  }\n\n  async handle(oidcLoginOptions: IOidcOptions): Promise<LoginResult> {\n    // // TODO: include nonce\n    // Disable camel case rule because this query requires camel case\n    /* eslint-disable camelcase */\n    const query: Record<string, string> = {\n      client_id: oidcLoginOptions.client.clientId,\n      response_type: \"id_token token\",\n      redirect_uri: oidcLoginOptions.redirectUrl,\n      // The webid scope does not appear in the spec\n      scope: \"openid webid offline_access\",\n      state: oidcLoginOptions.sessionId,\n    };\n\n    const [key] = await Promise.all([\n      generateJwkForDpop(),\n      this.storageUtility.setForUser(\n        oidcLoginOptions.sessionId,\n        {\n          isLoggedIn: \"false\",\n          sessionId: oidcLoginOptions.sessionId,\n        },\n        { secure: true }\n      ),\n    ]);\n    /* eslint-enable camelcase */\n    // TODO: There is currently no secure storage of the DPoP key\n    if (oidcLoginOptions.dpop) {\n      query.dpop = await createDpopHeader(oidcLoginOptions.issuer, \"GET\", key);\n    }\n\n    const sessionInfo = await this.sessionInfoManager.get(\n      oidcLoginOptions.sessionId\n    );\n    if (!sessionInfo) {\n      throw new Error(\"There was a problem creating a session.\");\n    }\n\n    const requestUrl = new URL(\n      oidcLoginOptions.issuerConfiguration.authorizationEndpoint\n    );\n    for (const queryParamkey of Object.keys(query)) {\n      requestUrl.searchParams.set(queryParamkey, query[queryParamkey]);\n    }\n\n    // This flow must happen in a browser, which means a redirection\n    // should always be possible.\n    this.redirector.redirect(requestUrl.toString(), {\n      handleRedirect: oidcLoginOptions.handleRedirect,\n    });\n    // The login is only completed AFTER redirect, so nothing to return here.\n    return undefined;\n  }\n}\n"]}},"error":null,"hash":"eaea0ec9a4c5e2ca03488efc9a511164","cacheData":{"env":{}}}