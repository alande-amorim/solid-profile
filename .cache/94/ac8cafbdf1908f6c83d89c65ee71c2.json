{"id":"node_modules/@inrupt/solid-client-authn-browser/dist/ClientAuthentication.js","dependencies":[{"name":"/Users/amorim.alande/Projects/pod-profile/node_modules/@inrupt/solid-client-authn-browser/dist/ClientAuthentication.js.map","includedInParent":true,"mtime":1611945169054},{"name":"/Users/amorim.alande/Projects/pod-profile/node_modules/@inrupt/solid-client-authn-browser/src/ClientAuthentication.ts","includedInParent":true,"mtime":1611945169054},{"name":"/Users/amorim.alande/Projects/pod-profile/package.json","includedInParent":true,"mtime":1612372540913},{"name":"/Users/amorim.alande/Projects/pod-profile/node_modules/@inrupt/solid-client-authn-browser/package.json","includedInParent":true,"mtime":1611945169054},{"name":"reflect-metadata","loc":{"line":16,"column":8},"parent":"/Users/amorim.alande/Projects/pod-profile/node_modules/@inrupt/solid-client-authn-browser/dist/ClientAuthentication.js","resolved":"/Users/amorim.alande/Projects/pod-profile/node_modules/reflect-metadata/Reflect.js"},{"name":"tsyringe","loc":{"line":17,"column":27},"parent":"/Users/amorim.alande/Projects/pod-profile/node_modules/@inrupt/solid-client-authn-browser/dist/ClientAuthentication.js","resolved":"/Users/amorim.alande/Projects/pod-profile/node_modules/tsyringe/dist/esm5/index.js"},{"name":"@inrupt/oidc-client-ext","loc":{"line":18,"column":34},"parent":"/Users/amorim.alande/Projects/pod-profile/node_modules/@inrupt/solid-client-authn-browser/dist/ClientAuthentication.js","resolved":"/Users/amorim.alande/Projects/pod-profile/node_modules/@inrupt/oidc-client-ext/dist/index.es.js"}],"generated":{"js":"\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.fetchWithCookies = void 0;\nrequire(\"reflect-metadata\");\nconst tsyringe_1 = require(\"tsyringe\");\nconst oidc_client_ext_1 = require(\"@inrupt/oidc-client-ext\");\nconst fetchWithCookies = (info, init) => {\n    return window.fetch(info, {\n        ...init,\n        credentials: \"include\",\n    });\n};\nexports.fetchWithCookies = fetchWithCookies;\nlet ClientAuthentication = class ClientAuthentication {\n    constructor(loginHandler, redirectHandler, logoutHandler, sessionInfoManager) {\n        this.loginHandler = loginHandler;\n        this.redirectHandler = redirectHandler;\n        this.logoutHandler = logoutHandler;\n        this.sessionInfoManager = sessionInfoManager;\n        this.login = async (sessionId, options) => {\n            var _a, _b, _c;\n            await this.sessionInfoManager.clear(sessionId);\n            const redirectUrl = oidc_client_ext_1.removeOidcQueryParam((_a = options.redirectUrl) !== null && _a !== void 0 ? _a : window.location.href);\n            await this.loginHandler.handle({\n                sessionId,\n                oidcIssuer: options.oidcIssuer,\n                redirectUrl,\n                clientId: options.clientId,\n                clientSecret: options.clientSecret,\n                clientName: (_b = options.clientName) !== null && _b !== void 0 ? _b : options.clientId,\n                popUp: options.popUp || false,\n                handleRedirect: options.handleRedirect,\n                tokenType: (_c = options.tokenType) !== null && _c !== void 0 ? _c : \"DPoP\",\n            });\n        };\n        this.fetch = exports.fetchWithCookies;\n        this.logout = async (sessionId) => {\n            await this.logoutHandler.handle(sessionId);\n            this.fetch = (info, init) => window.fetch(info, init);\n        };\n        this.getSessionInfo = async (sessionId) => {\n            return this.sessionInfoManager.get(sessionId);\n        };\n        this.getAllSessionInfo = async () => {\n            return this.sessionInfoManager.getAll();\n        };\n        this.handleIncomingRedirect = async (url) => {\n            const redirectInfo = await this.redirectHandler.handle(url);\n            this.fetch = redirectInfo.fetch;\n            const cleanedUpUrl = new URL(url);\n            cleanedUpUrl.searchParams.delete(\"state\");\n            cleanedUpUrl.searchParams.delete(\"code\");\n            cleanedUpUrl.searchParams.delete(\"id_token\");\n            cleanedUpUrl.searchParams.delete(\"access_token\");\n            window.history.replaceState(null, \"\", cleanedUpUrl.toString());\n            return {\n                isLoggedIn: redirectInfo.isLoggedIn,\n                webId: redirectInfo.webId,\n                sessionId: redirectInfo.sessionId,\n            };\n        };\n    }\n};\nClientAuthentication = __decorate([\n    tsyringe_1.injectable(),\n    __param(0, tsyringe_1.inject(\"loginHandler\")),\n    __param(1, tsyringe_1.inject(\"redirectHandler\")),\n    __param(2, tsyringe_1.inject(\"logoutHandler\")),\n    __param(3, tsyringe_1.inject(\"sessionInfoManager\")),\n    __metadata(\"design:paramtypes\", [Object, Object, Object, Object])\n], ClientAuthentication);\nexports.default = ClientAuthentication;\n"},"sourceMaps":{"js":{"version":3,"file":"ClientAuthentication.js","sourceRoot":"","sources":["../src/ClientAuthentication.ts"],"names":[],"mappings":"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","sourcesContent":["/*\n * Copyright 2021 Inrupt Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n\n/**\n * @hidden\n * @packageDocumentation\n */\n\nimport \"reflect-metadata\";\nimport { injectable, inject } from \"tsyringe\";\nimport {\n  ILoginInputOptions,\n  ILoginHandler,\n  ILogoutHandler,\n  IRedirectHandler,\n  ISessionInfo,\n  ISessionInfoManager,\n} from \"@inrupt/solid-client-authn-core\";\nimport { removeOidcQueryParam } from \"@inrupt/oidc-client-ext\";\n\n// TMP: This ensures that the HTTP requests will include any relevant cookie\n// that could have been set by the resource server.\n// https://developer.mozilla.org/en-US/docs/Web/API/WindowOrWorkerGlobalScope/fetch#parameters\nexport const fetchWithCookies = (\n  info: RequestInfo,\n  init?: RequestInit\n): ReturnType<typeof fetch> => {\n  return window.fetch(info, {\n    ...init,\n    credentials: \"include\",\n  });\n};\n\n/**\n * @hidden\n */\n@injectable()\nexport default class ClientAuthentication {\n  constructor(\n    @inject(\"loginHandler\") private loginHandler: ILoginHandler,\n    @inject(\"redirectHandler\") private redirectHandler: IRedirectHandler,\n    @inject(\"logoutHandler\") private logoutHandler: ILogoutHandler,\n    @inject(\"sessionInfoManager\")\n    private sessionInfoManager: ISessionInfoManager\n  ) {}\n\n  // Define these functions as properties so that they don't get accidentally re-bound.\n  // Isn't Javascript fun?\n  login = async (\n    sessionId: string,\n    options: ILoginInputOptions\n  ): Promise<void> => {\n    // In order to get a clean start, make sure that the session is logged out\n    // on login.\n    // But we may want to preserve our client application info, particularly if\n    // we used Dynamic Client Registration to register (since we don't\n    // necessarily want the user to have to register this app each time they\n    // login).\n    await this.sessionInfoManager.clear(sessionId);\n\n    // In the case of the user hitting the 'back' button in their browser, they\n    // could return to a previous redirect URL that contains OIDC params that\n    // are now longer valid - so just to be safe, strip relevant params now.\n    const redirectUrl = removeOidcQueryParam(\n      options.redirectUrl ?? window.location.href\n    );\n\n    await this.loginHandler.handle({\n      sessionId,\n      oidcIssuer: options.oidcIssuer,\n      redirectUrl,\n      clientId: options.clientId,\n      clientSecret: options.clientSecret,\n      clientName: options.clientName ?? options.clientId,\n      popUp: options.popUp || false,\n      handleRedirect: options.handleRedirect,\n      // Defaults to DPoP\n      tokenType: options.tokenType ?? \"DPoP\",\n    });\n  };\n\n  // By default, our fetch() resolves to the environment fetch() function.\n  fetch = fetchWithCookies;\n\n  logout = async (sessionId: string): Promise<void> => {\n    await this.logoutHandler.handle(sessionId);\n\n    // Restore our fetch() function back to the environment fetch(), effectively\n    // leaving us with un-authenticated fetches from now on.\n    this.fetch = (\n      info: RequestInfo,\n      init?: RequestInit\n    ): ReturnType<typeof fetch> => window.fetch(info, init);\n  };\n\n  getSessionInfo = async (\n    sessionId: string\n  ): Promise<ISessionInfo | undefined> => {\n    // TODO complete\n    return this.sessionInfoManager.get(sessionId);\n  };\n\n  getAllSessionInfo = async (): Promise<ISessionInfo[]> => {\n    return this.sessionInfoManager.getAll();\n  };\n\n  handleIncomingRedirect = async (\n    url: string\n  ): Promise<ISessionInfo | undefined> => {\n    const redirectInfo = await this.redirectHandler.handle(url);\n\n    this.fetch = redirectInfo.fetch;\n\n    const cleanedUpUrl = new URL(url);\n    cleanedUpUrl.searchParams.delete(\"state\");\n    // For auth code flow\n    cleanedUpUrl.searchParams.delete(\"code\");\n    // For implicit flow\n    cleanedUpUrl.searchParams.delete(\"id_token\");\n    cleanedUpUrl.searchParams.delete(\"access_token\");\n\n    // Remove OAuth-specific query params (since the login flow finishes with the\n    // browser being redirected back with OAuth2 query params (e.g. for 'code'\n    // and 'state'), and so if the user simply refreshes this page our\n    // authentication library will be called again with what are now invalid\n    // query parameters!).\n    window.history.replaceState(null, \"\", cleanedUpUrl.toString());\n\n    return {\n      isLoggedIn: redirectInfo.isLoggedIn,\n      webId: redirectInfo.webId,\n      sessionId: redirectInfo.sessionId,\n    };\n  };\n}\n"]}},"error":null,"hash":"dc5a0b9f32d52d9fb3f214dbde171ce4","cacheData":{"env":{}}}