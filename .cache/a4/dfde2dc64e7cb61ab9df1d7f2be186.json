{"id":"node_modules/@inrupt/solid-client-authn-core/dist/login/oidc/issuerConfigSchema.js","dependencies":[{"name":"/Users/amorim.alande/Projects/pod-profile/node_modules/@inrupt/solid-client-authn-core/dist/login/oidc/issuerConfigSchema.js.map","includedInParent":true,"mtime":1611945169047},{"name":"/Users/amorim.alande/Projects/pod-profile/node_modules/@inrupt/solid-client-authn-core/src/login/oidc/issuerConfigSchema.ts","includedInParent":true,"mtime":1611945169047},{"name":"/Users/amorim.alande/Projects/pod-profile/package.json","includedInParent":true,"mtime":1612372540913},{"name":"/Users/amorim.alande/Projects/pod-profile/node_modules/@inrupt/solid-client-authn-core/package.json","includedInParent":true,"mtime":1611945169047}],"generated":{"js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.issuerConfigSchema = void 0;\nconst issuerConfigSchema = {\n    type: \"object\",\n    properties: {\n        issuer: { type: \"string\", format: \"uri\" },\n        authorization_endpoint: { type: \"string\", format: \"uri\" },\n        token_endpoint: { type: \"string\", format: \"uri\" },\n        userinfo_endpoint: { type: \"string\", format: \"uri\" },\n        jwks_uri: { type: \"string\", format: \"uri\" },\n        registration_endpoint: { type: \"string\", format: \"uri\" },\n        scopes_supported: { type: \"array\", items: { type: \"string\" } },\n        response_types_supported: {\n            type: \"array\",\n            items: {\n                type: \"string\",\n                joinedStringOf: [\"code\", \"id_token\", \"token\", \"none\"],\n            },\n        },\n        response_modes_supported: {\n            type: \"array\",\n            items: {\n                type: \"string\",\n                enum: [\"query\", \"fragment\"],\n            },\n            default: [\"query\", \"fragment\"],\n        },\n        grant_types_supported: {\n            type: \"array\",\n            items: {\n                type: \"string\",\n                enum: [\n                    \"authorization_code\",\n                    \"implicit\",\n                    \"client_credentials\",\n                    \"device_code\",\n                    \"refresh_token\",\n                ],\n            },\n            default: [\"authorization_code\", \"implicit\"],\n        },\n        acr_values_supported: { type: \"array\", items: { type: \"string\" } },\n        subject_types_supported: {\n            type: \"array\",\n            items: {\n                type: \"string\",\n                enum: [\"pairwise\", \"public\"],\n            },\n        },\n        id_token_signing_alg_values_supported: {\n            type: \"array\",\n            items: { type: \"string\" },\n        },\n        id_token_encryption_alg_values_supported: {\n            type: \"array\",\n            items: { type: \"string\" },\n        },\n        id_token_encryption_enc_values_supported: {\n            type: \"array\",\n            items: { type: \"string\" },\n        },\n        userinfo_signing_alg_values_supported: {\n            type: \"array\",\n            items: { type: \"string\" },\n        },\n        userinfo_encryption_alg_values_supported: {\n            type: \"array\",\n            items: { type: \"string\" },\n        },\n        userinfo_encryption_enc_values_supported: {\n            type: \"array\",\n            items: { type: \"string\" },\n        },\n        request_object_signing_alg_values_supported: {\n            type: \"array\",\n            items: { type: \"string\" },\n        },\n        request_object_encryption_alg_values_supported: {\n            type: \"array\",\n            items: { type: \"string\" },\n        },\n        request_object_encryption_enc_values_supported: {\n            type: \"array\",\n            items: { type: \"string\" },\n        },\n        token_endpoint_auth_methods_supported: {\n            type: \"array\",\n            items: { type: \"string\" },\n        },\n        token_endpoint_auth_signing_alg_values_supported: {\n            type: \"array\",\n            items: { type: \"string\" },\n        },\n        display_values_supported: { type: \"array\", items: { type: \"string\" } },\n        claim_types_supported: { type: \"array\", items: { type: \"string\" } },\n        claims_supported: { type: \"array\", items: { type: \"string\" } },\n        service_documentation: { type: \"array\", items: { type: \"string\" } },\n        claims_locales_supported: { type: \"array\", items: { type: \"string\" } },\n        ui_locales_supported: { type: \"array\", items: { type: \"string\" } },\n        claims_parameter_supported: { type: \"boolean\" },\n        request_parameter_supported: { type: \"boolean\" },\n        request_uri_parameter_supported: { type: \"boolean\" },\n        require_request_uri_registration: { type: \"boolean\" },\n        op_policy_uri: { type: \"string\", format: \"uri\" },\n        op_tos_uri: { type: \"string\", format: \"uri\" },\n    },\n    additionalProperties: true,\n};\nexports.issuerConfigSchema = issuerConfigSchema;\n"},"sourceMaps":{"js":{"version":3,"file":"issuerConfigSchema.js","sourceRoot":"","sources":["../../../src/login/oidc/issuerConfigSchema.ts"],"names":[],"mappings":"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","sourcesContent":["/*\n * Copyright 2021 Inrupt Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n\n/**\n * @hidden\n * @packageDocumentation\n */\n\n/**\n * An ajv schema defining the shape of an openid-configuration\n */\n\n// TODO: there are many enums that are not filled out in this. They must be filled out\n// TODO: REQUIRED elements are not specified\n\n// Disable camelcase linter because issuers must have snake-case\n/* eslint-disable camelcase */\nconst issuerConfigSchema = {\n  type: \"object\",\n  properties: {\n    issuer: { type: \"string\", format: \"uri\" },\n    authorization_endpoint: { type: \"string\", format: \"uri\" },\n    token_endpoint: { type: \"string\", format: \"uri\" },\n    userinfo_endpoint: { type: \"string\", format: \"uri\" },\n    jwks_uri: { type: \"string\", format: \"uri\" },\n    registration_endpoint: { type: \"string\", format: \"uri\" },\n    scopes_supported: { type: \"array\", items: { type: \"string\" } },\n    response_types_supported: {\n      type: \"array\",\n      items: {\n        type: \"string\",\n        joinedStringOf: [\"code\", \"id_token\", \"token\", \"none\"],\n      },\n    },\n    response_modes_supported: {\n      type: \"array\",\n      items: {\n        type: \"string\",\n        enum: [\"query\", \"fragment\"],\n      },\n      default: [\"query\", \"fragment\"],\n    },\n    grant_types_supported: {\n      type: \"array\",\n      items: {\n        type: \"string\",\n        enum: [\n          \"authorization_code\",\n          \"implicit\",\n          \"client_credentials\",\n          \"device_code\",\n          \"refresh_token\",\n        ],\n      },\n      default: [\"authorization_code\", \"implicit\"],\n    },\n    acr_values_supported: { type: \"array\", items: { type: \"string\" } },\n    subject_types_supported: {\n      type: \"array\",\n      items: {\n        type: \"string\",\n        enum: [\"pairwise\", \"public\"],\n      },\n    },\n    // TODO: fill out enum values\n    id_token_signing_alg_values_supported: {\n      type: \"array\",\n      items: { type: \"string\" },\n    },\n    id_token_encryption_alg_values_supported: {\n      type: \"array\",\n      items: { type: \"string\" },\n    },\n    id_token_encryption_enc_values_supported: {\n      type: \"array\",\n      items: { type: \"string\" },\n    },\n    userinfo_signing_alg_values_supported: {\n      type: \"array\",\n      items: { type: \"string\" },\n    },\n    userinfo_encryption_alg_values_supported: {\n      type: \"array\",\n      items: { type: \"string\" },\n    },\n    userinfo_encryption_enc_values_supported: {\n      type: \"array\",\n      items: { type: \"string\" },\n    },\n    request_object_signing_alg_values_supported: {\n      type: \"array\",\n      items: { type: \"string\" },\n    },\n    request_object_encryption_alg_values_supported: {\n      type: \"array\",\n      items: { type: \"string\" },\n    },\n    request_object_encryption_enc_values_supported: {\n      type: \"array\",\n      items: { type: \"string\" },\n    },\n    token_endpoint_auth_methods_supported: {\n      type: \"array\",\n      items: { type: \"string\" },\n    },\n    token_endpoint_auth_signing_alg_values_supported: {\n      type: \"array\",\n      items: { type: \"string\" },\n    },\n    display_values_supported: { type: \"array\", items: { type: \"string\" } },\n    claim_types_supported: { type: \"array\", items: { type: \"string\" } },\n    claims_supported: { type: \"array\", items: { type: \"string\" } },\n    service_documentation: { type: \"array\", items: { type: \"string\" } },\n    claims_locales_supported: { type: \"array\", items: { type: \"string\" } },\n    ui_locales_supported: { type: \"array\", items: { type: \"string\" } },\n    claims_parameter_supported: { type: \"boolean\" },\n    request_parameter_supported: { type: \"boolean\" },\n    request_uri_parameter_supported: { type: \"boolean\" },\n    require_request_uri_registration: { type: \"boolean\" },\n    op_policy_uri: { type: \"string\", format: \"uri\" },\n    op_tos_uri: { type: \"string\", format: \"uri\" },\n  },\n  additionalProperties: true,\n};\n\nexport { issuerConfigSchema };\n"]}},"error":null,"hash":"b61d313ffdb099b509bfcaf64c1b5a79","cacheData":{"env":{}}}