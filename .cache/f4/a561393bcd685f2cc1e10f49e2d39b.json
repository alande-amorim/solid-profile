{"id":"node_modules/@inrupt/solid-client-authn-browser/dist/sessionInfo/SessionInfoManager.js","dependencies":[{"name":"/Users/amorim.alande/Projects/pod-profile/node_modules/@inrupt/solid-client-authn-browser/dist/sessionInfo/SessionInfoManager.js.map","includedInParent":true,"mtime":1611945169054},{"name":"/Users/amorim.alande/Projects/pod-profile/node_modules/@inrupt/solid-client-authn-browser/src/sessionInfo/SessionInfoManager.ts","includedInParent":true,"mtime":1611945169054},{"name":"/Users/amorim.alande/Projects/pod-profile/package.json","includedInParent":true,"mtime":1612221001734},{"name":"/Users/amorim.alande/Projects/pod-profile/node_modules/@inrupt/solid-client-authn-browser/package.json","includedInParent":true,"mtime":1611945169054},{"name":"tsyringe","loc":{"line":16,"column":27},"parent":"/Users/amorim.alande/Projects/pod-profile/node_modules/@inrupt/solid-client-authn-browser/dist/sessionInfo/SessionInfoManager.js","resolved":"/Users/amorim.alande/Projects/pod-profile/node_modules/tsyringe/dist/esm5/index.js"},{"name":"uuid","loc":{"line":17,"column":23},"parent":"/Users/amorim.alande/Projects/pod-profile/node_modules/@inrupt/solid-client-authn-browser/dist/sessionInfo/SessionInfoManager.js","resolved":"/Users/amorim.alande/Projects/pod-profile/node_modules/uuid/dist/esm-browser/index.js"},{"name":"@inrupt/oidc-client-ext","loc":{"line":18,"column":34},"parent":"/Users/amorim.alande/Projects/pod-profile/node_modules/@inrupt/solid-client-authn-browser/dist/sessionInfo/SessionInfoManager.js","resolved":"/Users/amorim.alande/Projects/pod-profile/node_modules/@inrupt/oidc-client-ext/dist/index.es.js"},{"name":"../ClientAuthentication","loc":{"line":19,"column":39},"parent":"/Users/amorim.alande/Projects/pod-profile/node_modules/@inrupt/solid-client-authn-browser/dist/sessionInfo/SessionInfoManager.js","resolved":"/Users/amorim.alande/Projects/pod-profile/node_modules/@inrupt/solid-client-authn-browser/dist/ClientAuthentication.js"}],"generated":{"js":"\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SessionInfoManager = exports.clear = exports.getUnauthenticatedSession = void 0;\nconst tsyringe_1 = require(\"tsyringe\");\nconst uuid_1 = require(\"uuid\");\nconst oidc_client_ext_1 = require(\"@inrupt/oidc-client-ext\");\nconst ClientAuthentication_1 = require(\"../ClientAuthentication\");\nfunction getUnauthenticatedSession() {\n    return {\n        isLoggedIn: false,\n        sessionId: uuid_1.v4(),\n        fetch: ClientAuthentication_1.fetchWithCookies,\n    };\n}\nexports.getUnauthenticatedSession = getUnauthenticatedSession;\nasync function clear(sessionId, storage) {\n    const webId = await storage.getForUser(sessionId, \"webId\", {\n        secure: true,\n    });\n    if (webId !== undefined) {\n        const webIdAsUrl = new URL(webId);\n        const resourceServerIri = webIdAsUrl.origin;\n        await storage.clearResourceServerSessionInfo(resourceServerIri);\n    }\n    await Promise.all([\n        storage.deleteAllUserData(sessionId, { secure: false }),\n        storage.deleteAllUserData(sessionId, { secure: true }),\n        storage.delete(\"clientKey\", { secure: false }),\n    ]);\n    await oidc_client_ext_1.clearOidcPersistentStorage();\n}\nexports.clear = clear;\nlet SessionInfoManager = class SessionInfoManager {\n    constructor(storageUtility) {\n        this.storageUtility = storageUtility;\n    }\n    update(_sessionId, _options) {\n        throw new Error(\"Not Implemented\");\n    }\n    async get(sessionId) {\n        const webId = await this.storageUtility.getForUser(sessionId, \"webId\", {\n            secure: true,\n        });\n        const isLoggedIn = await this.storageUtility.getForUser(sessionId, \"isLoggedIn\", {\n            secure: true,\n        });\n        const refreshToken = await this.storageUtility.getForUser(sessionId, \"refreshToken\", {\n            secure: true,\n        });\n        const issuer = await this.storageUtility.getForUser(sessionId, \"issuer\", {\n            secure: true,\n        });\n        if (isLoggedIn !== undefined) {\n            return {\n                sessionId,\n                webId,\n                isLoggedIn: isLoggedIn === \"true\",\n                refreshToken,\n                issuer,\n            };\n        }\n        return undefined;\n    }\n    async getAll() {\n        throw new Error(\"Not implemented\");\n    }\n    async clear(sessionId) {\n        return clear(sessionId, this.storageUtility);\n    }\n    async register(_sessionId) {\n        throw new Error(\"Unimplemented\");\n    }\n    async getRegisteredSessionIdAll() {\n        throw new Error(\"Unimplemented\");\n    }\n    async clearAll() {\n        throw new Error(\"Unimplemented\");\n    }\n};\nSessionInfoManager = __decorate([\n    tsyringe_1.injectable(),\n    __param(0, tsyringe_1.inject(\"storageUtility\")),\n    __metadata(\"design:paramtypes\", [Object])\n], SessionInfoManager);\nexports.SessionInfoManager = SessionInfoManager;\n"},"sourceMaps":{"js":{"version":3,"file":"SessionInfoManager.js","sourceRoot":"","sources":["../../src/sessionInfo/SessionInfoManager.ts"],"names":[],"mappings":"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","sourcesContent":["/*\n * Copyright 2021 Inrupt Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n\n/**\n * @hidden\n * @packageDocumentation\n */\n\nimport { inject, injectable } from \"tsyringe\";\nimport {\n  ISessionInfo,\n  ISessionInfoManager,\n  ISessionInternalInfo,\n  ISessionInfoManagerOptions,\n  IStorageUtility,\n} from \"@inrupt/solid-client-authn-core\";\nimport { v4 } from \"uuid\";\nimport { clearOidcPersistentStorage } from \"@inrupt/oidc-client-ext\";\nimport { fetchWithCookies } from \"../ClientAuthentication\";\n\nexport function getUnauthenticatedSession(): ISessionInfo & {\n  fetch: typeof fetch;\n} {\n  return {\n    isLoggedIn: false,\n    sessionId: v4(),\n    fetch: fetchWithCookies,\n  };\n}\n\n/**\n * @param sessionId\n * @param storage\n * @hidden\n */\nexport async function clear(\n  sessionId: string,\n  storage: IStorageUtility\n): Promise<void> {\n  // The type assertion is okay, because it throws on undefined.\n  const webId = await storage.getForUser(sessionId, \"webId\", {\n    secure: true,\n  });\n  if (webId !== undefined) {\n    const webIdAsUrl = new URL(webId);\n    const resourceServerIri = webIdAsUrl.origin;\n    await storage.clearResourceServerSessionInfo(resourceServerIri);\n  }\n  await Promise.all([\n    storage.deleteAllUserData(sessionId, { secure: false }),\n    storage.deleteAllUserData(sessionId, { secure: true }),\n    // FIXME: This is needed until the DPoP key is stored safely\n    storage.delete(\"clientKey\", { secure: false }),\n  ]);\n  await clearOidcPersistentStorage();\n}\n\n/**\n * @hidden\n */\n@injectable()\nexport class SessionInfoManager implements ISessionInfoManager {\n  constructor(\n    @inject(\"storageUtility\") private storageUtility: IStorageUtility\n  ) {}\n\n  // eslint-disable-next-line class-methods-use-this\n  update(\n    _sessionId: string,\n    _options: ISessionInfoManagerOptions\n  ): Promise<void> {\n    // const localUserId: string = options.localUserId || this.uuidGenerator.v4();\n    // if (options.loggedIn) {\n    //   return {\n    //     sessionId,\n    //     loggedIn: true,\n    //     webId: options.webId as string,\n    //     neededAction: options.neededAction || { actionType: \"inaction\" },\n    //     state: options.state,\n    //     logout: async (): Promise<void> => {\n    //       // TODO: handle if webid isn't here\n    //       return this.logoutHandler.handle(localUserId);\n    //     },\n    //     fetch: (url: RequestInfo, init?: RequestInit): Promise<Response> => {\n    //       // TODO: handle if webid isn't here\n    //       return this.authenticatedFetcher.handle(\n    //         {\n    //           localUserId,\n    //           type: \"dpop\"\n    //         },\n    //         url,\n    //         init\n    //       );\n    //     }\n    //   };\n    // } else {\n    //   return {\n    //     localUserId,\n    //     loggedIn: false,\n    //     neededAction: options.neededAction || { actionType: \"inaction\" }\n    //   };\n    // }\n    throw new Error(\"Not Implemented\");\n  }\n\n  async get(\n    sessionId: string\n  ): Promise<(ISessionInfo & ISessionInternalInfo) | undefined> {\n    const webId = await this.storageUtility.getForUser(sessionId, \"webId\", {\n      secure: true,\n    });\n    const isLoggedIn = await this.storageUtility.getForUser(\n      sessionId,\n      \"isLoggedIn\",\n      {\n        secure: true,\n      }\n    );\n    const refreshToken = await this.storageUtility.getForUser(\n      sessionId,\n      \"refreshToken\",\n      {\n        secure: true,\n      }\n    );\n    const issuer = await this.storageUtility.getForUser(sessionId, \"issuer\", {\n      secure: true,\n    });\n    if (isLoggedIn !== undefined) {\n      return {\n        sessionId,\n        webId,\n        isLoggedIn: isLoggedIn === \"true\",\n        refreshToken,\n        issuer,\n      };\n    }\n    return undefined;\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  async getAll(): Promise<(ISessionInfo & ISessionInternalInfo)[]> {\n    throw new Error(\"Not implemented\");\n  }\n\n  /**\n   * This function removes all session-related information from storage.\n   * @param sessionId the session identifier\n   * @param storage the storage where session info is stored\n   * @hidden\n   */\n  async clear(sessionId: string): Promise<void> {\n    return clear(sessionId, this.storageUtility);\n  }\n\n  /**\n   * Registers a new session, so that its ID can be retrieved.\n   * @param sessionId\n   */\n  async register(_sessionId: string): Promise<void> {\n    throw new Error(\"Unimplemented\");\n  }\n\n  /**\n   * Returns all the registered session IDs. Differs from getAll, which also\n   * returns additional session information.\n   */\n  async getRegisteredSessionIdAll(): Promise<string[]> {\n    throw new Error(\"Unimplemented\");\n  }\n\n  /**\n   * Deletes all information about all sessions, including their registrations.\n   */\n  async clearAll(): Promise<void> {\n    throw new Error(\"Unimplemented\");\n  }\n}\n"]}},"error":null,"hash":"a32529d64ede64d17ad043ee5119912f","cacheData":{"env":{}}}