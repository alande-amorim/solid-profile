{"id":"node_modules/@inrupt/solid-client-authn-browser/dist/login/oidc/redirectHandler/FallbackRedirectHandler.js","dependencies":[{"name":"/Users/amorim.alande/Projects/pod-profile/node_modules/@inrupt/solid-client-authn-browser/dist/login/oidc/redirectHandler/FallbackRedirectHandler.js.map","includedInParent":true,"mtime":1611945169054},{"name":"/Users/amorim.alande/Projects/pod-profile/node_modules/@inrupt/solid-client-authn-browser/src/login/oidc/redirectHandler/FallbackRedirectHandler.ts","includedInParent":true,"mtime":1611945169054},{"name":"/Users/amorim.alande/Projects/pod-profile/package.json","includedInParent":true,"mtime":1612372540913},{"name":"/Users/amorim.alande/Projects/pod-profile/node_modules/@inrupt/solid-client-authn-browser/package.json","includedInParent":true,"mtime":1611945169054},{"name":"tsyringe","loc":{"line":10,"column":27},"parent":"/Users/amorim.alande/Projects/pod-profile/node_modules/@inrupt/solid-client-authn-browser/dist/login/oidc/redirectHandler/FallbackRedirectHandler.js","resolved":"/Users/amorim.alande/Projects/pod-profile/node_modules/tsyringe/dist/esm5/index.js"},{"name":"../../../sessionInfo/SessionInfoManager","loc":{"line":11,"column":37},"parent":"/Users/amorim.alande/Projects/pod-profile/node_modules/@inrupt/solid-client-authn-browser/dist/login/oidc/redirectHandler/FallbackRedirectHandler.js","resolved":"/Users/amorim.alande/Projects/pod-profile/node_modules/@inrupt/solid-client-authn-browser/dist/sessionInfo/SessionInfoManager.js"}],"generated":{"js":"\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.FallbackRedirectHandler = void 0;\nconst tsyringe_1 = require(\"tsyringe\");\nconst SessionInfoManager_1 = require(\"../../../sessionInfo/SessionInfoManager\");\nlet FallbackRedirectHandler = class FallbackRedirectHandler {\n    async canHandle(redirectUrl) {\n        try {\n            new URL(redirectUrl);\n            return true;\n        }\n        catch (e) {\n            throw new Error(`[${redirectUrl}] is not a valid URL, and cannot be used as a redirect URL: ${e.toString()}`);\n        }\n    }\n    async handle(_redirectUrl) {\n        return SessionInfoManager_1.getUnauthenticatedSession();\n    }\n};\nFallbackRedirectHandler = __decorate([\n    tsyringe_1.injectable()\n], FallbackRedirectHandler);\nexports.FallbackRedirectHandler = FallbackRedirectHandler;\n"},"sourceMaps":{"js":{"version":3,"file":"FallbackRedirectHandler.js","sourceRoot":"","sources":["../../../../src/login/oidc/redirectHandler/FallbackRedirectHandler.ts"],"names":[],"mappings":";;;;;;;;;AA0BA,uCAAsC;AAMtC,gFAAoF;AASpF,IAAa,uBAAuB,GAApC,MAAa,uBAAuB;IAClC,KAAK,CAAC,SAAS,CAAC,WAAmB;QACjC,IAAI;YAGF,IAAI,GAAG,CAAC,WAAW,CAAC,CAAC;YACrB,OAAO,IAAI,CAAC;SACb;QAAC,OAAO,CAAC,EAAE;YACV,MAAM,IAAI,KAAK,CACb,IAAI,WAAW,+DAA+D,CAAC,CAAC,QAAQ,EAAE,EAAE,CAC7F,CAAC;SACH;IACH,CAAC;IAED,KAAK,CAAC,MAAM,CAEV,YAAoB;QAEpB,OAAO,8CAAyB,EAAE,CAAC;IACrC,CAAC;CACF,CAAA;AApBY,uBAAuB;IADnC,qBAAU,EAAE;GACA,uBAAuB,CAoBnC;AApBY,0DAAuB","sourcesContent":["/*\n * Copyright 2021 Inrupt Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n\n/**\n * @hidden\n * @packageDocumentation\n */\n\nimport { injectable } from \"tsyringe\";\nimport {\n  IRedirectHandler,\n  ISessionInfo,\n} from \"@inrupt/solid-client-authn-core\";\n\nimport { getUnauthenticatedSession } from \"../../../sessionInfo/SessionInfoManager\";\n\n/**\n * This class handles redirect IRIs without any query params, and returns an unauthenticated\n * session. It serves as a fallback so that consuming libraries don't have to test\n * for the query params themselves, and can always try to use them as a redirect IRI.\n * @hidden\n */\n@injectable()\nexport class FallbackRedirectHandler implements IRedirectHandler {\n  async canHandle(redirectUrl: string): Promise<boolean> {\n    try {\n      // The next URL object is built for validating it.\n      // eslint-disable-next-line no-new\n      new URL(redirectUrl);\n      return true;\n    } catch (e) {\n      throw new Error(\n        `[${redirectUrl}] is not a valid URL, and cannot be used as a redirect URL: ${e.toString()}`\n      );\n    }\n  }\n\n  async handle(\n    // The argument is ignored, but must be present to implement the interface\n    _redirectUrl: string\n  ): Promise<ISessionInfo & { fetch: typeof fetch }> {\n    return getUnauthenticatedSession();\n  }\n}\n"]}},"error":null,"hash":"965a62a80dd69cbc7708611f0e29d4e3","cacheData":{"env":{}}}