{"id":"node_modules/@inrupt/solid-client-authn-browser/dist/login/oidc/redirectHandler/TokenSaver.js","dependencies":[{"name":"/Users/amorim.alande/Projects/pod-profile/node_modules/@inrupt/solid-client-authn-browser/dist/login/oidc/redirectHandler/TokenSaver.js.map","includedInParent":true,"mtime":1611945169054},{"name":"/Users/amorim.alande/Projects/pod-profile/node_modules/@inrupt/solid-client-authn-browser/src/login/oidc/redirectHandler/TokenSaver.ts","includedInParent":true,"mtime":1611945169054},{"name":"/Users/amorim.alande/Projects/pod-profile/package.json","includedInParent":true,"mtime":1612372540913},{"name":"/Users/amorim.alande/Projects/pod-profile/node_modules/@inrupt/solid-client-authn-browser/package.json","includedInParent":true,"mtime":1611945169054},{"name":"tsyringe","loc":{"line":15,"column":27},"parent":"/Users/amorim.alande/Projects/pod-profile/node_modules/@inrupt/solid-client-authn-browser/dist/login/oidc/redirectHandler/TokenSaver.js","resolved":"/Users/amorim.alande/Projects/pod-profile/node_modules/tsyringe/dist/esm5/index.js"},{"name":"@inrupt/oidc-client-ext","loc":{"line":16,"column":34},"parent":"/Users/amorim.alande/Projects/pod-profile/node_modules/@inrupt/solid-client-authn-browser/dist/login/oidc/redirectHandler/TokenSaver.js","resolved":"/Users/amorim.alande/Projects/pod-profile/node_modules/@inrupt/oidc-client-ext/dist/index.es.js"}],"generated":{"js":"\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tsyringe_1 = require(\"tsyringe\");\nconst oidc_client_ext_1 = require(\"@inrupt/oidc-client-ext\");\nlet TokenSaver = class TokenSaver {\n    constructor(storageUtility) {\n        this.storageUtility = storageUtility;\n    }\n    async saveSession(oauthState, idToken, accessToken, refreshToken) {\n        const decoded = await oidc_client_ext_1.decodeJwt(accessToken);\n        const sessionId = (await this.storageUtility.getForUser(oauthState, \"sessionId\", {\n            errorIfNull: true,\n        }));\n        await this.storageUtility.setForUser(sessionId, {\n            webId: decoded.sub,\n            idToken: idToken,\n            refreshToken: refreshToken,\n            isLoggedIn: \"true\",\n        }, { secure: true });\n    }\n};\nTokenSaver = __decorate([\n    tsyringe_1.injectable(),\n    __param(0, tsyringe_1.inject(\"storageUtility\")),\n    __metadata(\"design:paramtypes\", [Object])\n], TokenSaver);\nexports.default = TokenSaver;\n"},"sourceMaps":{"js":{"version":3,"file":"TokenSaver.js","sourceRoot":"","sources":["../../../../src/login/oidc/redirectHandler/TokenSaver.ts"],"names":[],"mappings":";;;;;;;;;;;;;;AA0BA,uCAA8C;AAE9C,6DAAoD;AAkBpD,IAAqB,UAAU,GAA/B,MAAqB,UAAU;IAC7B,YACoC,cAA+B;QAA/B,mBAAc,GAAd,cAAc,CAAiB;IAChE,CAAC;IAEJ,KAAK,CAAC,WAAW,CACf,UAAkB,EAClB,OAAe,EACf,WAAoB,EACpB,YAAqB;QAErB,MAAM,OAAO,GAAG,MAAM,2BAAS,CAE7B,WAAqB,CACtB,CAAC;QACF,MAAM,SAAS,GAAG,CAAC,MAAM,IAAI,CAAC,cAAc,CAAC,UAAU,CACrD,UAAU,EACV,WAAW,EACX;YACE,WAAW,EAAE,IAAI;SAClB,CACF,CAAW,CAAC;QAGb,MAAM,IAAI,CAAC,cAAc,CAAC,UAAU,CAClC,SAAS,EACT;YACE,KAAK,EAAE,OAAO,CAAC,GAAa;YAC5B,OAAO,EAAE,OAAiB;YAC1B,YAAY,EAAE,YAAsB;YACpC,UAAU,EAAE,MAAM;SACnB,EACD,EAAE,MAAM,EAAE,IAAI,EAAE,CACjB,CAAC;IACJ,CAAC;CACF,CAAA;AAnCoB,UAAU;IAD9B,qBAAU,EAAE;IAGR,WAAA,iBAAM,CAAC,gBAAgB,CAAC,CAAA;;GAFR,UAAU,CAmC9B;kBAnCoB,UAAU","sourcesContent":["/*\n * Copyright 2021 Inrupt Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n\n/**\n * @hidden\n * @packageDocumentation\n */\n\nimport { injectable, inject } from \"tsyringe\";\nimport { IStorageUtility } from \"@inrupt/solid-client-authn-core\";\nimport { decodeJwt } from \"@inrupt/oidc-client-ext\";\n\n/**\n * @hidden\n */\nexport interface ITokenSaver {\n  saveSession(\n    oauthState: string,\n    idToken: string,\n    accessToken?: string,\n    refreshToken?: string\n  ): Promise<void>;\n}\n\n/**\n * @hidden\n */\n@injectable()\nexport default class TokenSaver implements ITokenSaver {\n  constructor(\n    @inject(\"storageUtility\") private storageUtility: IStorageUtility\n  ) {}\n\n  async saveSession(\n    oauthState: string,\n    idToken: string,\n    accessToken?: string,\n    refreshToken?: string\n  ): Promise<void> {\n    const decoded = await decodeJwt(\n      // TODO this should actually be the id_vc of the token\n      accessToken as string\n    );\n    const sessionId = (await this.storageUtility.getForUser(\n      oauthState,\n      \"sessionId\",\n      {\n        errorIfNull: true,\n      }\n    )) as string;\n\n    // TODO validate decoded token\n    await this.storageUtility.setForUser(\n      sessionId,\n      {\n        webId: decoded.sub as string,\n        idToken: idToken as string,\n        refreshToken: refreshToken as string,\n        isLoggedIn: \"true\",\n      },\n      { secure: true }\n    );\n  }\n}\n"]}},"error":null,"hash":"64804edfd35f4320cdbe0971151e4120","cacheData":{"env":{}}}